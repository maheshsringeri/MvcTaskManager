{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin.module.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/alert.directive.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/can-activate-guard.service.ts","./src/app/client-location-status-validator.directive.ts","./src/app/client-location.ts","./src/app/client-locations.service.ts","./src/app/countries.service.ts","./src/app/custom-validators.service.ts","./src/app/dashboard.service.ts","./src/app/filter.pipe.ts","./src/app/jwt-intercepter.service.ts","./src/app/jwt-un-authorized-intercepter.service.ts","./src/app/login-view-model.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/number-to-words.pipe.ts","./src/app/paging.pipe.ts","./src/app/project-idunique-validator.directive.ts","./src/app/project.ts","./src/app/projects.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/team-size-validator.directive.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AboutComponent } from './about/about.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { DashboardService } from '../dashboard.service';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule } from '@angular/forms';\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\nimport { NumberToWordsPipe } from '../number-to-words.pipe';\nimport { FilterPipe } from '../filter.pipe';\nimport { PagingPipe } from '../paging.pipe';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent,\n    CheckBoxPrinterComponent,\n    NumberToWordsPipe,\n    FilterPipe,\n    PagingPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports:[DashboardComponent,AboutComponent,MyProfileComponent,ProjectsComponent,\n            TeamSizeValidatorDirective,ClientLocationStatusValidatorDirective,ProjectIDUniqueValidatorDirective],\n  providers:[DashboardService]\n\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n\n  isChecked=false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  check()\n  {\n    debugger;\n    this.isChecked=true;\n  }\n\n  unCheck()\n  {\n    debugger;\n    this.isChecked=false;\n  }\n\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" id=\"isChecked\" name=\"isChecked\" [(ngModel)]=\"isChecked\" >\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../dashboard.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  Designation:string='';\n  Username:string='';\n  NoOfTeamMembers:number=0;\n  TotalCostOfAllProjects:number=0;\n  PendingTasks:number=0;\n  UpComingProjects:number=0;\n  ProjectCost:number=0;\n  CurrentExpenditure:number=0;\n  AvailableFunds:number=0;\n  SelectedYear:number=0;\n  ToDay: Date=new Date();\n\n  Clients:string[]=[];\n  Projects:string[]=[];\n  Years:number[]=[];\n  TeamMembersSummary:any[]=[];\n  TeamMembers:any[]=[];\n\n  constructor(private dashboardService:DashboardService)\n  {\n\n  }\n\n  ngOnInit(): void {\n   this.Designation='Team Leader';\n   this.Username='Mahesh SN';\n   this.NoOfTeamMembers=10;\n   this.TotalCostOfAllProjects=15050000;\n   this.PendingTasks=50;\n   this.UpComingProjects=15;\n   this.ProjectCost=1000000;\n   this.CurrentExpenditure=500000;\n   this.AvailableFunds=50002.5000;\n   this.ToDay=new Date();\n\n   this.Clients=[\"ABC Infotech Ltd.\",\"DEF Software Solutions\",\"GHI Industries\",\"Educo Soft\"];\n   this.Projects=[\"Project A\",\"Project B\",\"Project C\",\"Project D\",\"Project E\"];\n\n   for(var year=2019; year<=2025;year++)\n   {\n      this.Years.push(year);\n   }\n\n   this.TeamMembersSummary=this.dashboardService.getTeamMembersSummary();\n   \n   this.TeamMembers=this.dashboardService.getTeamMembers();\n\n  }\n\n  OnProjectChange($event:any){\n    if($event.target.innerHTML==\"Project A\")\n    {\n      this.ProjectCost=150000;\n      this.CurrentExpenditure=1000;\n      this.AvailableFunds=100000;\n    }\n    else if($event.target.innerHTML==\"Project B\")\n    {\n      this.ProjectCost=250000;\n      this.CurrentExpenditure=2000;\n      this.AvailableFunds=200000;\n    }\n    else if($event.target.innerHTML==\"Project C\")\n    {\n      this.ProjectCost=350000;\n      this.CurrentExpenditure=3000;\n      this.AvailableFunds=300000;\n    }\n    else if($event.target.innerHTML==\"Project D\")\n    {\n      this.ProjectCost=450000;\n      this.CurrentExpenditure=4000;\n      this.AvailableFunds=400000;\n    }\n    else if($event.target.innerHTML==\"Project E\")\n    {\n      this.ProjectCost=550000;\n      this.CurrentExpenditure=5000;\n      this.AvailableFunds=500000;\n    }\n  }\n\n  OnYearChange($event:any)\n  {\n    this.SelectedYear=$event.target.innerHTML;\n  }\n}\n","<nav aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n        <li class=\"breadcrumb-item active\">Dashboard [ToDay's Date:{{ToDay | date:\"d/m/y\"}}]</li>\n      </ol>\n</nav>\n<h5>Dashboard</h5>\n<div class=\"row\">\n<div class=\"col-3 pb-3\" style=\"background-color: #e9e6e6;\">\n<div class=\"row\">\n    <div class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\" style=\"background-color: #a39e9e;font-family: 'Arial Narrow Bold', sans-serif;\">\n    {{Designation | uppercase}}\n    </div>\n    <div class=\"col-12 text-center mt-2\" >\n        <img src=\"assets/user.png\" width=\"120px\"/>\n    </div>\n    <div class=\"col-12 text-center pt-2 pb-2 fw-bold\" style=\"font-family: Tahoma\" >\n        {{ Username }}\n    </div>\n    <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\n        TEAM SUMMARY\n    </div>\n    <div class=\"col-12 mb-3\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                NO. OF TEAM MEMBERS\n              <span class=\"badge bg-secondary rounded-pill\">{{NoOfTeamMembers}}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                TOTAL COST OF ALL PROJECTS\n              <span class=\"badge bg-secondary rounded-pill\">{{TotalCostOfAllProjects}}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                PENDING TASKS\n              <span class=\"badge bg-secondary rounded-pill\">{{PendingTasks}}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                UPCOMING PROJECTS\n              <span class=\"badge bg-secondary rounded-pill\">{{UpComingProjects}}</span>\n            </li>\n          </ul>\n    </div>\n    <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: 'Arial Narrow'\" >CLIENTS</div>\n    <div class=\"col-12\">\n        <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client}}</li>\n        </ul>\n    </div>\n</div>\n</div>\n<div class=\"col-6\">\n    <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\n        <div class=\"row pt-1\">\n            <div class=\"col-6 text-left\">\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"cboProject\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                        Project A\n                    </button>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"cboProject\">\n                      <li *ngFor=\"let project of Projects\" ><a class=\"dropdown-item\" href=\"#\" onclick=\"return false\" (click)=\"OnProjectChange($event)\" >{{project}}</a></li>\n                    </ul>\n                  </div>\n            </div>\n            <div class=\"col-6 text-end\">\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"cboYear\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                      2019\n                    </button>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"cboYear\">\n                      <li><a *ngFor=\"let year of Years\" class=\"dropdown-item\" href=\"#\" onclick=\"return false\" (click)=\"OnYearChange($event)\"  >{{year}}</a></li>\n                    </ul>\n                  </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n                style=\"background-color: #718d97; font-family: 'Arial Narrow'\">\n        PROJECT BRIEFING\n    </div>\n    <div class=\"col-12\">\n        <table class=\"table table-borderless\">\n            <tr><td>Project Cost</td><td>{{ProjectCost | currency:\"USD\"}}</td></tr>\n            <tr><td>Current Expenditure</td><td>{{CurrentExpenditure | currency:\"INR\"}}</td></tr>\n            <tr><td>Available Funds</td><td>{{AvailableFunds}}</td></tr>\n          </table>\n    </div>\n    <div [ngSwitch]=\"SelectedYear\" class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\">\n        TEAM MEMBERS SUMMARY - \n        <span *ngSwitchCase=\" '2019' \" style=\"color: red;\" >{{SelectedYear}}</span>\n        <span *ngSwitchCase=\"'2020'\" style=\"color: rgb(187, 255, 0);\" >{{SelectedYear}}</span>\n        <span *ngSwitchCase=\"'2021'\" style=\"color: rgb(14, 138, 111);\" >{{SelectedYear}}</span>\n        <span *ngSwitchDefault style=\"color: rgb(22, 19, 19);\" >{{SelectedYear}}</span>\n    </div>\n    <div class=\"col-12\" *ngIf=\"(SelectedYear<=2022)\">\n        <table class=\"table\">\n            <tr>\n                <th>Region</th>\n                <th>Team Members Count</th>\n                <th>Temporarily Unavailable Members</th>\n              </tr>\n              <tr *ngFor=\"let MembersSummary of TeamMembersSummary\">\n                <td>\n                  <b>{{MembersSummary.Region}}</b>\n                </td>\n                <td>{{MembersSummary.Count}}</td>\n                <td>{{MembersSummary.Members}}</td>\n              </tr>\n         </table>\n    </div>\n</div>\n<div class=\"col-3\" style=\"background-color: #e9e6e6;\">\n    <div class=\"col-11 mx-auto text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\">\n        TEAM MEMBERS\n    </div>\n    <div class=\"col-12 pt-2\" >\n        <div class=\"accordion\" id=\"accordionExample\" *ngFor=\"let teamMembers of TeamMembers;let i=index\">\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\" [id]=\"'headingOne'+i\">\n                <button class=\"accordion-button bg-secondary text-white\" type=\"button\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#collapseOne'+i\" aria-expanded=\"true\" [attr.aria-controls]=\"'collapseOne'+i\">\n                    {{teamMembers.Region}}\n                </button>\n              </h2>\n              <div [id]=\"'collapseOne'+i\" class=\"accordion-collapse collapse\" [ngClass]=\"(i==0)?'show':''\" [attr.aria-labelledby]=\"'headingOne'+i\" data-bs-parent=\"#accordionExample\">\n                <div class=\"accordion-body\">\n                    <div *ngIf=\"i==0;then firstTemplate;else secondTemplate\" >\n\n                    </div>\n                    <ng-template #firstTemplate>\n                        <div *ngFor=\"let members of teamMembers.Members\"  class=\"card border-primary mb-3\" style=\"max-width: 18rem;\">\n                            <div class=\"card-header text-white\" [ngClass]=\"(members.Status=='Busy')?'bg-danger':'bg-primary'\" >{{members.Id}} - {{members.Name}}</div>\n                            <div class=\"card-body text-primary\">\n                              <h6 class=\"card-title\" [style.color]=\"(members.Status=='Busy')?'Red':'black'\" >{{members.Status}}</h6>\n                            </div>\n                        </div>\n                    </ng-template>\n\n                    <ng-template #secondTemplate>\n                        <table class=\"table\">\n                            <thead>\n                              <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Status</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let members of teamMembers.Members\" >\n                                <td>{{members.Id}}</td>\n                                <td [style.color]=\"(members.Status=='Busy')?'red':'black'\" >{{members.Name}}</td>\n                                <td [style.color]=\"(members.Status=='Busy')?'red':'black'\"><i class=\"fa fa-phone\"></i> {{members.Status}}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                    </ng-template>\n\n                </div>\n              </div>\n            </div>\n          </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-profile works!</p>\n","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, ContentChild, ContentChildren, DoCheck, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnChanges,OnInit,DoCheck,\n    AfterContentInit,AfterContentChecked,AfterViewInit,AfterViewChecked,OnDestroy\n{\n\n  @Input(\"currentProject\") project:Project|any=null;\n  @Input(\"recordIndex\") i:number=0;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  @ContentChildren(\"selectionBox\") selectiobBoxes:QueryList<CheckBoxPrinterComponent>|any=null;\n  \n  MySubscription: Subscription|any;\n  hideDetails:boolean=false;\n\n  constructor(public projectsService:ProjectsService) \n  {\n\n  }\n\n  ngOnChanges(simpleChanges:SimpleChanges): void {\n    console.info(\"----------------ngOnChanges called\");\n    for(let propName in simpleChanges)\n    {\n      let chng=simpleChanges[propName];\n      let cur=JSON.stringify(chng.currentValue);\n      let prev=JSON.stringify(chng.previousValue);\n\n      console.log(`${propName}:currentValue=${cur} ,previousValue=${prev}`);\n    }\n\n    if(simpleChanges[\"project\"])\n    {\n      //this.project.teamSize+=1;\n    }\n\n  }\n\n  ngOnInit(): void \n  {\n    console.info(\"----------------ngOnInit called\");\n    this.MySubscription=  this.projectsService.MySubject.subscribe((hide)=>{\n                                  this.hideDetails=hide;\n                                });\n  }\n\n  ngDoCheck(): void {\n    console.info(\"----------------ngDoCheck called\");\n  }\n\n  ngAfterContentInit(): void {\n    console.info(\"----------------ngAfterContentInit called\");\n    console.log(this.selectiobBoxes.toArray());\n  }\n\n  ngAfterContentChecked(): void {\n    console.info(\"----------------ngAfterContentChecked called\");\n  }\n\n  @ViewChild(\"tbl\") tbl:ElementRef|any=null;\n  ngAfterViewInit(): void {\n    console.info(\"----------------ngAfterViewInit called\");\n    console.log(this.tbl);\n  }\n\n  ngAfterViewChecked(): void {\n    console.info(\"----------------ngAfterViewChecked called\");\n  }\n\n  ngOnDestroy()\n  {\n    console.info(\"----------------ngOnDestroy called\");\n    this.MySubscription.unsubscribe();\n  }\n\n  onEditClick(event: any, i: number)\n  {\n    this.editClick.emit({ event, i});\n  }\n\n  onDeleteClick(event: any, i: number)\n  {\n    this.deleteClick.emit({ event, i});\n  }\n\n  isAllCheckedChange(b:boolean)\n  {\n    let selectiobBox=this.selectiobBoxes.toArray();\n\n    if(b)\n    {\n      for(let i=0;i<selectiobBox.length;i++)\n      {\n        selectiobBox[i].check();\n      }\n    }\n    else\n    {\n      for(let i=0;i<selectiobBox.length;i++)\n      {\n        selectiobBox[i].unCheck();\n      }\n    }\n  }\n\n}\n","<div class=\"card card-primary mb-3\">\n    <div class=\"card-header\">\n        <div class=\"row\" >\n            <div class=\"col-md-11\" >\n                <div>#{{project.projectID }} </div>\n                <h5>{{project.projectName}}</h5>\n            </div>\n            <div class=\"col-md-1\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <table #tbl class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\n            <tr><th>Date of Start</th><td>{{project.dateOfStart}}  </td></tr>\n            <tr><th>Team Size</th><td>{{project.teamSize}} ({{project.teamSize|numberToWords}}) </td></tr>\n            <tr><th>Client Lacation </th><td>{{project.clientLocation?.clientLocationName}}  </td></tr>\n            <tr><th>Status </th><td>{{project.status}}</td></tr>\n        </table>\n    </div>\n    <div class=\"card-footer text-muted\">\n      <button class=\"btn btn-info\" (click)=\"onEditClick($event,i)\" data-bs-toggle=\"modal\" data-bs-target=\"#EditModal\" >Edit</button>&nbsp;\n      <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event,i)\"  data-bs-toggle=\"modal\" data-bs-target=\"#DeleteModal\" >Delete</button>\n    </div>\n  </div>","import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { Project } from 'src/app/project';\nimport { Observable, Subscriber } from 'rxjs';\nimport { ClientLocation } from 'src/app/client-location';\nimport { ClientLocationsService } from 'src/app/client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\nimport { ProjectComponent } from '../project/project.component';\nimport { FilterPipe } from 'src/app/filter.pipe';\n\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit \n{\n\n  projects:Project[]=[];\n  clientLocations:Observable<ClientLocation[]>|any;\n  showLoading:boolean=true;\n\n  newProject:Project=new Project();\n  editProject:Project=new Project();\n  editIndex:number=0;\n  deleteProject:Project=new Project();\n  deleteIndex:number=0;\n  searchBy:string=\"projectName\";\n  searchText:string=\"\";\n\n  currentPageIndex:number=0;\n  pageSize:number=3;\n  pages:any[]=[];\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n  \n\n  constructor(private projectsService:ProjectsService,private clientLocationsService:ClientLocationsService) \n  { \n\n  }\n\n  \n\n  ngOnInit(): void {\n    this.projectsService.getAllProjects().subscribe({\n      next:(response:Project[])=>{\n        this.projects=response;\n        this.showLoading=false;\n        this.calculateNoOfPages();\n      }\n    });\n\n    this.clientLocations=this.clientLocationsService.getClientLocations();\n  }\n\n  onSaveClick()\n  {\n    if(this.newForm.valid)\n    {\n      this.newProject.clientLocation.clientLocationID=0;\n\n      this.projectsService.insertProject(this.newProject).subscribe({\n            next: (response)=>{\n                  var p:Project=new Project();\n                  p.projectID=response.projectID;\n                  p.projectName=response.projectName;\n                  p.dateOfStart=response.dateOfStart;\n                  p.teamSize=response.teamSize;\n                  p.active=response.active;\n                  p.status=response.status;\n                  p.clientLocationID=response.clientLocationID;\n                  p.clientLocation=response.clientLocation;\n                  this.projects.push(p);\n\n                  this.newProject.projectID=null;\n                  this.newProject.projectName=null;\n                  this.newProject.dateOfStart=null;\n                  this.newProject.teamSize=null;\n                  this.newProject.active=false;\n                  this.newProject.status=null;\n                  this.newProject.clientLocationID=null;\n                  \n                  $(\"#newFormCancel\").trigger(\"click\");\n                  this.calculateNoOfPages();\n                },\n            error: (error)=>{\n                console.log(error);\n              }\n          }\n        );\n    }\n  }\n\n  @ViewChild(\"prjEName\") prjEName:ElementRef|any=null;\n  onEditClick(event:any,index:number)\n  {\n    this.editForm.resetForm();\n\n    setTimeout(() => {\n      this.editProject.projectID=this.projects[index].projectID;\n      this.editProject.projectName=this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\n      this.editProject.teamSize=this.projects[index].teamSize;\n      this.editProject.active=this.projects[index].active;\n      this.editProject.status=this.projects[index].status;\n      this.editProject.clientLocationID=this.projects[index].clientLocationID;\n      this.editProject.clientLocation=this.projects[index].clientLocation;\n\n      this.editIndex=index;\n      \n      this.prjEName.nativeElement.focus();\n\n    }, 500);\n  }\n\n  onUpdateClick()\n  {\n    if(this.editForm.valid)\n    {\n      this.projectsService.updateProject(this.editProject).subscribe({\n            next:(response)=>{\n              var p:Project=new Project();\n              p.projectID=response.projectID;\n              p.projectName=response.projectName;\n              p.dateOfStart=response.dateOfStart;\n              p.teamSize=response.teamSize;\n              p.active=response.active;\n              p.status=response.status;\n              p.clientLocationID=response.clientLocationID;\n              p.clientLocation=response.clientLocation;\n\n              this.projects[this.editIndex]=p;\n\n              this.editProject.projectID=null;\n              this.editProject.projectName=null;\n              this.editProject.dateOfStart=null;\n              this.editProject.teamSize=null;\n              this.editProject.active=false;\n              this.editProject.status=null;\n              this.editProject.clientLocationID=null;\n\n              $(\"#editFormCancel\").trigger(\"click\");\n            },\n            error:(error)=>{\n              console.log(error);\n            }\n\n        });\n    }\n  }\n\n  onDeleteClick(event:any,index:number)\n  {\n      this.deleteIndex=index;\n      this.deleteProject.projectID=this.projects[index].projectID;\n      this.deleteProject.projectName=this.projects[index].projectName;\n      this.deleteProject.dateOfStart=this.projects[index].dateOfStart;\n      this.deleteProject.teamSize=this.projects[index].teamSize;\n\n      this.calculateNoOfPages();\n  }\n\n  onDeleteConfirmClick()\n  {\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe({\n      next:(response)=>{\n        this.projects.splice(this.deleteIndex,1)\n\n        this.deleteProject.projectID=null;\n        this.deleteProject.projectName=null;\n        this.deleteProject.dateOfStart=null;\n        this.deleteProject.teamSize=null;\n      },\n      error:(error)=>{\n        console.log(error);\n      }\n    });\n\n  }\n\n  onSearchClick()\n  {\n    // this.projectsService.searchProjects(this.searchBy,this.searchText).subscribe({\n    //   next:(response:Project[])=>{\n    //     this.projects=response;\n    //   },\n    //   error:(error)=>{\n    //     console.log(error);\n    //   }\n    // });\n  }\n\n  onSearchTextKeyup(event:any)\n  {\n    this.calculateNoOfPages();\n  }\n\n  \n  @ViewChild(\"prjID\") prjID: ElementRef | any = null;\n  onNewClick(event:any)\n  {\n    this.newForm.resetForm();\n    setTimeout(() => {\n      this.prjID.nativeElement.focus();\n    }, 500);\n  }\n\n  onHideShowDetails(event:any)\n  {\n    this.projectsService.toggleDetails();\n      \n  }\n\n  \n\n  @ViewChildren(\"prj\") prj : QueryList<ProjectComponent> | any = null;\n\n  isAllChecked:boolean=false;\n  isAllCheckedChange(event:any)\n  {\n    let prjs=this.prj.toArray();\n    for(let i=0;i<prjs.length;i++)\n    {\n      prjs[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n\n  calculateNoOfPages()\n  {\n    let filterPipe=new FilterPipe();\n    var resultProjects=filterPipe.transform(this.projects,this.searchBy,this.searchText);\n\n    var noOfPages=Math.ceil(resultProjects.length/this.pageSize);\n\n    this.pages=[];\n\n    for(let i=0;i<noOfPages;i++)\n    {\n      this.pages.push({pageIndex:i});\n    }\n\n    this.currentPageIndex=0;\n\n  }\n\n  onPageIndexClicked(pageIndex:number)\n  {\n    this.currentPageIndex=pageIndex;\n  }\n  \n\n\n}\n","<h5>Projects List\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h5>\n<div class=\"row\">\n    <div class=\"col-sm-10 mx-auto\">\n      <div class=\"row mb-3\">\n        <label for=\"drpSearchBy\" class=\"col-sm-2 col-form-label text-end\">Search By</label>\n        <div class=\"col-sm-4\">\n          <select id=\"drpSearchBy\" class=\"form-select form-select-sm\" name=\"SearchBy\" [(ngModel)]=\"searchBy\" >\n              <option value=\"projectID\" >Project ID</option>\n              <option value=\"projectName\" >Project Name</option>\n              <option value=\"dateOfStart\" >Date Of Start</option>\n              <option value=\"teamSize\" >Team Size</option>\n          </select>\n        </div>\n        <label for=\"textSearchText\" class=\"col-sm-2 col-form-label text-end\">Search:</label>\n        <div class=\"col-sm-4\">\n          <div class=\"input-group\">\n            <input\n              type=\"text\"\n              class=\"form-control form-select-sm\"\n              id=\"txtSearchText\"\n              name=\"SearchText\"\n              [(ngModel)]=\"searchText\"\n              (keyup)=\"onSearchTextKeyup($event)\"\n            />\n            <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n              <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb-3\">\n        <div class=\"col-sm-2\">\n          <button type=\"button\" class=\"btn btn-primary btn-sm \" data-bs-toggle=\"modal\" data-bs-target=\"#AddModal\" (click)=\"onNewClick($event)\">\n            Create New Project\n          </button>\n        </div>\n        <div class=\"col-sm-2\">\n          <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"onHideShowDetails($event)\" >Hide/Show Details </button>\n        </div>\n        <div class=\"col-sm-8\">\n          <input type=\"checkbox\" id=\"isAllChecked\" name=\"isAllChecked\" value=\"true\" \n              [(ngModel)]=\"isAllChecked\" (change)=\"isAllCheckedChange($event)\" class=\"custom-control-input\"  >\n              <label for=\"isAllCheckedChange\" class=\"custom-control-label\">Select All</label>\n        </div>\n      </div>\n      <div class=\"row mb-3\" >\n        <div class=\"col-md-4 mb-1 projectcard\" *ngFor=\"let project of projects|filter:searchBy:searchText | paging : currentPageIndex : pageSize;let i=index\" >\n          <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event, i)\" (deleteClick)=\"onDeleteClick($event, i)\"  >\n            <app-check-box-printer #selectionBox></app-check-box-printer>\n          </app-project>\n        </div>\n      </div>\n      <div class=\"row mb-3\">\n        <div class=\"col-md-12\">\n          <nav aria-label=\"...\">\n            <ul class=\"pagination justify-content-center pagination-sm\">\n              <li *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\" [ngClass]=\"{'active':page.pageIndex == currentPageIndex}\" class=\"page-item\">\n                <span class=\"page-link\" >{{page.pageIndex + 1}}</span>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"AddModal\" tabindex=\"-1\" aria-labelledby=\"AddModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">New Project</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"form-group row mb-3\">\n                <label for=\"txtNewProjectId\"  class=\"col-sm-3 col-form-lable\">Project ID</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" [(ngModel)]=\"newProject.projectID\" name=\"ProjectID\" id=\"txtNewProjectId\"  #prjID class=\"form-control\"\n                      placeholder=\"Project ID\" #newProjectID=\"ngModel\" required=\"required\" pattern=\"^[0-9]*$\"  appProjectIDUniqueValidator \n                      [ngClass]=\"{'is-invalid': newProjectID.invalid && ( newProjectID.touched || newProjectID.dirty || newForm.submitted),\n                                  'is-valid': newProjectID.valid &&( newProjectID.touched || newProjectID.dirty || newForm.submitted )\n                                }\" >\n                    \n                    <span class=\"text-danger\" *ngif=\"newProjectID.invalid && (newProjectID.touched || newProjectID.dirty || newForm.submitted) \n                              && newProjectID.errors!['required']\" >Project ID can't be blank</span>\n                    <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.touched || newProjectID.dirty || newForm.submitted) \n                              && newProjectID.errors!['pattern']\">Project ID should contain numbers only</span>\n                  \n                    <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) \n                              && newProjectID.errors!['uniqueProjectID']\">Duplicate Project ID</span>\n                </div>\n            </div>\n            <div class=\"form-group row mb-3\">\n              <label for=\"txtNewProjectName\" class=\"col-sm-3 col-form-lable\">Project Name</label>\n              <div class=\"col-sm-9\">\n                  <input type=\"text\"  [(ngModel)]=\"newProject.projectName\" name=\"ProjectName\" id=\"txtNewProjectName\" class=\"form-control\" \n                    placeholder=\"Project Name\" #newProjectName=\"ngModel\" required=\"required\" pattern=\"^[A-Za-Z0-9 /-]*$\" minlength=\"3\" maxlength=\"30\"\n                    [ngClass]=\"{'is-invalid': newProjectName.invalid && (newProjectName.touched || newProjectName.dirty || newForm.submitted),\n                                'is-valid':newProjectName.valid && (newProjectName.touched || newProjectName.dirty ||newForm.submitted)\n                            }\" >\n                    <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.touched || newProjectName.dirty || newForm.submitted)\n                            && newProjectName.errors!['required']\" >Project Name can't be blank</span>\n\n                    <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.touched || newProjectName.dirty || newForm.submitted)\n                            && newProjectName.errors!['pattern']\" >Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n                    <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.touched || newProjectName.dirty || newForm.submitted)\n                            && newProjectName.errors!['minlength']\" >Project name should be at least 3 characters long</span>\n\n              </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n              <label for=\"txtNewDateOfStart\" class=\"col-sm-3 col-form-lable\">Date Of Start</label>\n              <div class=\"col-sm-9\">\n                  <input type=\"date\" [(ngModel)]=\"newProject.dateOfStart\" name=\"DateOfStart\" id=\"txtNewDateOfStart\" class=\"form-control\" \n                    placeholder=\"dd/mm/yyyy\" #newDateOfStart=\"ngModel\" required=\"required\" \n                    [ngClass]=\"{'is-invalid': newDateOfStart.invalid && (newDateOfStart.touched || newDateOfStart.dirty || newForm.submitted),\n                                 'is-valid': newDateOfStart.valid && (newDateOfStart.touched || newDateOfStart.dirty || newForm.submitted)\n                            }\" >\n                  \n                  <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.touched || newDateOfStart.dirty || newForm.submitted) \n                          && newDateOfStart.errors!['required']\" >Date of Start can't be blank</span>\n              </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n              <label for=\"txtTeamSize\" class=\"col-sm-3 col-form-lable\">Team Size</label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" \n                    name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" #newTeamSize=\"ngModel\" appTeamSizeValidator=\"5\"\n                    [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), \n                                  'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n                <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) \n                    && newTeamSize.errors!['pattern']\">Team Size should be a number</span>\n                \n                <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) \n                    && newTeamSize.errors!['divisible']\">Team Size should be divisble by 5</span>\n              </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n              <label class=\"col-sm-4 col-form-label\" >&nbsp;</label>\n              <div class=\"col-sm-8\">\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" \n                        [(ngModel)]=\"newProject.active\" name=\"active\">\n                    <label class=\"form-check-label\" for=\"chkNewActive\" >Active</label>\n                </div>\n              </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n            <label class=\"col-sm-4 col-form-label\" for=\"rbNewStatusInForce\">Status</label>\n            <div class=\"col-sm-8\">\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\"\n                      name=\"Status\" [(ngModel)]=\"newProject.status\" #newStatusInForce=\"ngModel\" required=\"required\">\n                    <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\"\n                      name=\"Status\" [(ngModel)]=\"newProject.status\" #NewStatusSupport=\"ngModel\" required=\"required\">\n                    <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n                </div>\n                <span class=\"text-danger\" *ngif=\"newStatusInForce.invalid &&(newStatusInForce.touched ||newStatusInForce.dirty ||newForm.submitted)\n                    && newStatusInForce.errors!['required'] \">Please select status</span>\n            </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n              <label class=\"col-sm-4 col-from-label\" for=\"drpNewClientLocation\">Client Location</label>\n              <div class=\"col-sm-8\">\n                <select id=\"drpNewClientLocation\" class=\"form-select form-select-sm\" name=\"ClientLocation\" \n                    [(ngModel)]=\"newProject.clientLocationID\" #newClientLocationID=\"ngModel\" required=\"required\"\n                    [ngClass]=\"{'is-invalid':newClientLocationID.invalid &&(newClientLocationID.touched || newClientLocationID.dirty || newForm.submitted),\n                                'is-valid':newClientLocationID.valid && (newClientLocationID.touched || newClientLocationID.dirty || newForm.submitted)\n                              }\" >\n                      <option value=\"null\">Please Select</option>\n                      <option *ngFor=\"let clientLocation of clientLocations | async\" [value]=\"clientLocation.clientLocationID\" >\n                        {{clientLocation.clientLocationName}} \n                      </option>\n                </select>\n                <span class=\"text-danger\" *ngIf=\"newClientLocationID.invalid && (newClientLocationID.touched || newClientLocationID.dirty || newForm.submitted)\n                    && newClientLocationID.errors!['required'] \" >Please select client location</span>\n                \n                <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) \n                    && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support projects are not allowed at Tokyo</span>  \n              </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"newFormCancel\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSaveClick()\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n    <!-- Edit Modal -->\n    <div class=\"modal fade\" id=\"EditModal\" tabindex=\"-1\" aria-labelledby=\"EditModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Project</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n              <div class=\"form-group row mb-3\">\n                  <label for=\"txtEditProjectId\" class=\"col-sm-3 col-form-lable\">Project ID</label>\n                  <div class=\"col-sm-9\">\n                      <input type=\"text\" [(ngModel)]=\"editProject.projectID\" name=\"ProjectID\" id=\"txtEditProjectId\" class=\"form-control form-control-palin-text\" disabled=\"disabled\"  \n                        placeholder=\"Project ID\" required=\"required\" pattern=\"^[0-9]*$\" #editProjectID=\"ngModel\" appProjectIDUniqueValidator \n                        [ngClass]=\"{'is-invalid': editProjectID.invalid && ( editProjectID.touched || editProjectID.dirty || editForm.submitted),\n                                    'is-valid': editProjectID.valid &&( editProjectID.touched || editProjectID.dirty || editForm.submitted )\n                                  }\" >\n                  </div>\n                \n                <span class=\"text-danger\" *ngif=\"editProjectID.invalid && (editProjectID.touched || editProjectID.dirty || editForm.submitted) \n                          && editProjectID.errors!['required']\" >Project ID can't be blank</span>\n                <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.touched || editProjectID.dirty || editForm.submitted) \n                          && editProjectID.errors!['pattern']\">Project ID should contain numbers only</span>\n                <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) \n                          && editProjectID.errors!['uniqueProjectID']\">Duplicate Project ID</span>\n              </div>\n              <div class=\"form-group row mb-3\">\n                <label for=\"txtEditProjectName\" class=\"col-sm-3 col-form-lable\">Project Name</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" #prjEName [(ngModel)]=\"editProject.projectName\" name=\"ProjectName\" id=\"txtEditProjectName\" class=\"form-control\" \n                        placeholder=\"Project Name\" #editProjectName=\"ngModel\" required=\"required\" pattern=\"^[A-Za-Z0-9 /-]*$\" minlength=\"3\" maxlength=\"30\"\n                        [ngClass]=\"{'is-invalid': editProjectName.invalid && (editProjectName.touched || editProjectName.dirty || editForm.submitted),\n                                    'is-valid':editProjectName.valid && (editProjectName.touched || editProjectName.dirty ||editForm.submitted)\n                            }\" >\n                    <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.touched || editProjectName.dirty || editForm.submitted)\n                            && editProjectName.errors!['required']\" >Project Name can't be blank</span>\n\n                    <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.touched || editProjectName.dirty || editForm.submitted)\n                            && editProjectName.errors!['pattern']\" >Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n                    <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.touched || editProjectName.dirty || editForm.submitted)\n                            && editProjectName.errors!['minlength']\" >Project name should be at least 3 characters long</span>\n\n                </div>\n            </div>\n            <div class=\"form-group row mb-3\">\n                <label for=\"txtEditDateOfStart\" class=\"col-sm-3 col-form-lable\">Date Of Start</label>\n                <div class=\"col-sm-9\">\n                   <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\" \n                      placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)] =\"editProject.dateOfStart\" #editDateOfStart=\"ngModel\"\n                      [ngClass]=\"{'is-invalid': editDateOfStart.invalid && (editDateOfStart.touched || editDateOfStart.dirty || editForm.submitted),\n                                  'is-valid': editDateOfStart.valid && (editDateOfStart.touched || editDateOfStart.dirty || editForm.submitted)\n                                }\" >\n                  \n                  <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editDateOfStart.touched || editDateOfStart.dirty || editForm.submitted) \n                          && editDateOfStart.errors!['required']\" >Date of Start can't be blank</span>\n\n                     <label>{{editProject.dateOfStart}}</label> \n                </div>\n            </div>\n            <div class=\"form-group row mb-3\">\n                <label for=\"txtEditTeamSize\" class=\"col-sm-3 col-form-lable\">Team Size</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" [(ngModel)]=\"editProject.teamSize\" name=\"TeamSize\" id=\"txtEditTeamSize\" class=\"form-control\" \n                      placeholder=\"Team Size\" #editTeamSize=\"ngModel\" maxlength=\"7\" pattern=\"^[0-9]*$\" appTeamSizeValidator=\"5\"\n                      [ngClass]=\"{'is-invalid':editTeamSize.invalid &&(editTeamSize.touched || editTeamSize.dirty || editForm.submitted ),\n                                  'is-valid':editTeamSize.valid &&(editTeamSize.touched || editTeamSize.dirty || editForm.submitted)\n                              }\" >\n                    <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid &&(editTeamSize.touched || editTeamSize.dirty || editForm.submitted)\n                          && editTeamSize.errors!['pattern'] \">Team Size should be a number</span>\n                    <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) \n                          && editTeamSize.errors!['divisible']\">Team Size should be divisble by 5</span>\n                </div>\n            </div>\n            <div class=\"form-group row mb-3\">\n              <label class=\"col-sm-4 col-form-label\" >&nbsp;</label>\n              <div class=\"col-sm-8\">\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" \n                        [(ngModel)]=\"editProject.active\" name=\"active\">\n                    <label class=\"form-check-label\" for=\"chkEditActive\" >Active</label>\n                </div>\n              </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n            <label class=\"col-sm-4 col-form-label\" for=\"rbEditStatusInForce\">Status</label>\n            <div class=\"col-sm-8\">\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\"\n                    name=\"Status\" [(ngModel)]=\"editProject.status\" #editStatusInForce=\"ngModel\" required=\"required\">\n                    <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\"\n                    name=\"Status\" [(ngModel)]=\"editProject.status\" #editStatusSupport=\"ngModel\" required=\"required\">\n                    <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n                </div>\n                <span class=\"text-danger\" *ngif=\"editStatusInForce.invalid &&(editStatusInForce.touched ||editStatusInForce.dirty ||editForm.submitted)\n                    && editStatusInForce.errors!['required'] \">Please select status</span>\n            </div>\n          </div>\n          <div class=\"form-group row mb-3\">\n              <label class=\"col-sm-4 col-from-label\" for=\"drpEditClientLocation\">Client Location</label>\n              <div class=\"col-sm-8\">\n                <select id=\"drpEditClientLocation\" class=\"form-select form-select-sm\" name=\"ClientLocation\" \n                    [(ngModel)]=\"editProject.clientLocationID\" #editClientLocationID=\"ngModel\" required=\"required\"\n                    [ngClass]=\"{'is-invalid':editClientLocationID.invalid &&(editClientLocationID.touched || editClientLocationID.dirty || editForm.submitted),\n                                'is-valid':editClientLocationID.valid && (editClientLocationID.touched || editClientLocationID.dirty ||editForm.submitted)\n                              }\" >\n                    <option value=\"null\">Please Select</option>\n                    <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\" >\n                       {{clientLocation.clientLocationName}} \n                    </option>\n                </select>\n                <span class=\"text-danger\" *ngIf=\"editClientLocationID.invalid && (editClientLocationID.touched || editClientLocationID.dirty || editForm.submitted)\n                    && editClientLocationID.errors!['required'] \" >Please select client location</span>\n                \n                <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) \n                    && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support projects are not allowed at Tokyo</span>  \n              </div>\n          </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" id=\"editFormCancel\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\"  (click)=\"onUpdateClick()\">Update</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n\n  \n<form>\n    <!-- Delete Modal -->\n    <div class=\"modal fade\" id=\"DeleteModal\" tabindex=\"-1\" aria-labelledby=\"DeleteModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Project</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n              <div class=\"text-warning\">Are you sure to delete this project </div>\n              <div class=\"form-group row mb-3\">\n                  <label for=\"txtDeleteProjectId\" class=\"col-sm-3 col-form-lable\">Project ID</label>\n                  <div class=\"col-sm-9\">\n                      <input type=\"text\" [(ngModel)]=\"deleteProject.projectID\" name=\"ProjectID\" id=\"txtDeleteProjectId\" class=\"form-control form-control-palin-text\" disabled=\"disabled\"  placeholder=\"Project ID\" >\n                  </div>\n              </div>\n              <div class=\"form-group row mb-3\">\n                <label for=\"txtDeleteProjectName\" class=\"col-sm-3 col-form-lable\">Project Name</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" [(ngModel)]=\"deleteProject.projectName\" name=\"ProjectName\" id=\"txtDeleteProjectName\" class=\"form-control form-control-palin-text\" disabled=\"disabled\" placeholder=\"Project Name\">\n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  ","import { Directive, ElementRef, HostBinding, HostListener, Input,Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective\n{\n  @Input(\"error\") error: string | any = null;\n  @HostBinding(\"title\") title:string=\"\";\n\n  constructor(private elementRef: ElementRef,private renderer2:Renderer2)\n  {\n  }\n\n  divElement:any;\n  spanElement:any;\n  spanText:any;\n\n  ngOnInit()\n  {\n    this.divElement=this.renderer2.createElement(\"div\");\n    this.renderer2.setAttribute(this.divElement,\"role\",\"alert\");\n    this.renderer2.setAttribute(this.divElement,\"class\",\"alert alert-danger fade show\");\n    this.renderer2.setStyle(this.divElement,\"transition\",\"transform 0.5s\");\n\n    this.spanElement=this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement,\"class\",\"message\");\n\n    this.spanText=this.renderer2.createText(this.error);\n\n    this.renderer2.appendChild(this.spanElement,this.spanText);\n    this.renderer2.appendChild(this.divElement,this.spanElement);\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title=\"Please try again.\";\n  }\n\n  @HostListener(\"mouseenter\",[\"$event\"])\n  onMouseEnter(event:any)\n  {\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1.1)\")\n    // this.elementRef.nativeElement.querySelector(\".alert\").style.transform=\"scale(1.1)\";\n  }\n\n  @HostListener(\"mouseleave\",[\"$event\"])\n  onMouseLeave(event:any)\n  {\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1)\");\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform=\"scale(1)\";\n  }\n\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './admin/about/about.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { ProjectsComponent } from './admin/projects/projects.component';\nimport { CanActivateGuardService } from './can-activate-guard.service';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n  {path:\"\",redirectTo:\"login\",pathMatch:\"full\"},\n  {path:\"login\",component:LoginComponent },\n  {path:\"signup\",component:SignupComponent},\n  {path:\"dashboard\",component:DashboardComponent,canActivate:[CanActivateGuardService],\n          data:{expectedRole:\"Admin\"}},\n  {path:\"about\",component:AboutComponent},\n  {path:\"projects\",component:ProjectsComponent,canActivate:[CanActivateGuardService],\n          data:{expectedRole:\"Admin\"}},\n  {path:\"tasks\",component:TasksComponent,canActivate:[CanActivateGuardService],\n          data:{expectedRole:\"Employee\"}}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(public loginService:LoginService,private domSanitizer:DomSanitizer){\n\n  }\n  \n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-success\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\"> Angular Task Manager </a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mynav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null\">\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"dashboard\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"tasks\">Tasks</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"about\">About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null\">\n            <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null\">\n            <a class=\"nav-link\" (click)=\"loginService.Logout()\" >Logout</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n            <a class=\"nav-link\" routerLink=\"login\">Login</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n            <a class=\"nav-link\" routerLink=\"signup\">Sign Up</a>\n          </li>\n        </ul>\n        <form class=\"d-flex\">\n            <span class=\"input-group-text\" id=\"search\" ><i class=\"fa fa-search\"></i></span>\n            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-warning\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  </nav>\n  <div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n  </div>\n ","import { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AdminModule } from './admin/admin.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { JwtIntercepterService } from './jwt-intercepter.service';\nimport { JwtUnAuthorizedIntercepterService } from './jwt-un-authorized-intercepter.service';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { AlertDirective } from './alert.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    TasksComponent,\n    AlertDirective\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config:{\n        tokenGetter:()=>{\n          return (sessionStorage.getItem('currentUser')?JSON.parse(sessionStorage.getItem('currentUser') as string).token:null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:JwtIntercepterService,\n      multi:true\n    },\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:JwtUnAuthorizedIntercepterService,\n      multi:true\n    }\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n {\n\n  constructor(private loginService:LoginService,private router:Router,private jwtHelperService:JwtHelperService) { \n\n  }\ncanActivate(route:ActivatedRouteSnapshot ): boolean\n{\n  console.log(this.router.url);\n  var token=sessionStorage.getItem('currentUser')?\n        JSON.parse(sessionStorage.getItem('currentUser') as string).token:null;\n\n  \n  if(this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == \n            route.data['expectedRole'] )    \n  {\n    return true;\n  }\n  else\n  {\n    this.router.navigate([\"login\"]);\n    return false;\n  }\n}\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { Variation } from '@popperjs/core';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers:[{provide:NG_VALIDATORS,useExisting:ClientLocationStatusValidatorDirective,multi:true}]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator\n{\n\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid=true;\n\n    if(control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid=false;\n    }\n    \n    if(isValid)\n    {\n      return null;\n    }\n    else{\n      return {clientLocationStatus:{valid:false}};\n    }\n\n  }\n\n}\n","export class ClientLocation \n{\n    clientLocationID:any;\n    clientLocationName:any;\n\n    constructor()\n    {\n        this.clientLocationID=null;\n        this.clientLocationName=null;\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient:HttpClient) {\n\n   }\n\n   getClientLocations():Observable<ClientLocation[]>\n   {\n     return this.httpClient.get<ClientLocation[]>(\"api/clientlocations\",{responseType:\"json\"});\n   }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs';\nimport { Country } from './country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getCountries():Observable<Country[]>\n  {\n      return this.httpClient.get<Country[]>(\"api/countries\",{responseType:\"json\"});\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService \n{\n\n  constructor(private loginService:LoginService) \n  { \n\n  }\n\n  public minimumAgeValidator(minAge:number):ValidatorFn\n  {\n    return (control:AbstractControl):ValidationErrors|null  =>{\n        if(!control.value)\n          return null;\n\n        var today=new Date();\n        var dateOfBirth=new Date(control.value);\n\n        var diffMilliSecond=Math.abs(today.getTime()-dateOfBirth.getTime());\n        var diffYears=(diffMilliSecond/(1000*60*60*24))/365.25;\n\n        if(diffYears>=minAge)\n          return null;\n        else\n          return {minAge:{valie:false}};\n        \n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: AbstractControl): ValidationErrors | null =>\n    {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else\n      {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator():AsyncValidatorFn\n  {\n    return (control:AbstractControl):Observable<ValidationErrors|null> =>{\n      return this.loginService.getUserByEmail(control.value)\n                      .pipe(map((existingUser:any)=>\n                      {\n                          if(existingUser!=null)\n                          {\n                            return {uniqueEmail:{valid:false}};\n                          }\n                          else\n                          {\n                            return null;\n                          }\n\n                      }));\n    };\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMembersSummary():any[]\n  {\n    var TeamMembersSummary=[\n      {Region:\"East\",Count:20,Members:4},\n      {Region:\"South\",Count:15,Members:8},\n      {Region:\"West\",Count:7,Members:1},\n      {Region:\"North\",Count:15,Members:16}\n     ];\n\n     return TeamMembersSummary;\n  }\n\n  getTeamMembers():any[]\n  {\n   var TeamMembers=[\n      {Region:\"East\",Members:[\n           {Id:1,Name:\"Ford\",Status:\"Available\"},\n           {Id:2,Name:\"Miller Jhone\",Status:\"Available\"},\n           {Id:3,Name:\"Jones\",Status:\"Busy\"},\n           {Id:4,Name:\"James\",Status:\"Busy\"}\n         ]\n       },\n       {Region:\"South\",Members:[\n           {Id:5,Name:\"Ford\",Status:\"Available\"},\n           {Id:6,Name:\"Miller\",Status:\"Available\"},\n           {Id:7,Name:\"Jones\",Status:\"Busy\"},\n           {Id:8,Name:\"James\",Status:\"Busy\"}\n         ]\n       },\n       {Region:\"West\",Members:[\n           {Id:9,Name:\"Jones\",Status:\"Available\"},\n           {Id:10,Name:\"Miller\",Status:\"Busy\"},\n           {Id:11,Name:\"Ford\",Status:\"Available\"},\n           {Id:12,Name:\"Ford\",Status:\"Busy\"}\n         ]\n       },\n       {Region:\"North\",Members:[\n         {Id:13,Name:\"Jones\",Status:\"Available\"},\n         {Id:14,Name:\"Miller\",Status:\"Busy\"},\n         {Id:15,Name:\"Ford\",Status:\"Available\"},\n         {Id:16,Name:\"James\",Status:\"Busy\"}\n       ]\n     }\n    ];\n\n    return TeamMembers;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: Project[]|any,searchBy:string,searchText:string): any {\n    if (value == null)\n    {\n      return value;\n    }\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtIntercepterService implements HttpInterceptor\n{\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      var currentUser={token:\"\"};\n      if(sessionStorage['currentUser']!=null)\n      {\n        currentUser=JSON.parse(sessionStorage['currentUser']);\n      }\n\n      request=request.clone({\n        setHeaders:{\n          Authorization:\"Bearer \"+currentUser.token\n        }\n      });\n\n      return next.handle(request);\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedIntercepterService implements HttpInterceptor\n{\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(tap({\n        next: (event:HttpEvent<any>)=>{\n          if(event instanceof HttpResponse)\n          {\n            //do something with response\n          }\n        },\n        error:(error:any)=>{\n          if(error instanceof HttpErrorResponse)\n          {\n            if(error.status==401)\n            {\n              console.log();\n              alert('401 UnAuthorized');\n            }\n          }\n        }\n      }\n    ));  \n\n  }\n\n}\n","export class LoginViewModel {\n    Username:string=\"\";\n    Password:string=\"\";\n}\n","import { HttpClient,HttpBackend } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel} from './login-view-model';\nimport { map } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\nimport { SignUpViewModel } from './sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  \n  private httpClient:HttpClient|null=null;\n  constructor(private httpBackend:HttpBackend,private jwtHelperService:JwtHelperService,private router:Router) \n  {\n  }\n\n  currentUserName:any=null;\n\n  public Login(loginViewModel:LoginViewModel):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\",loginViewModel,{responseType:\"json\",observe:\"response\"})\n        .pipe(map(response=>{\n          if(response)\n          {\n            this.currentUserName=response.body.userName; \n            sessionStorage['currentUser']=JSON.stringify(response.body);\n            sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n          }\n          return response.body;\n        }));\n  }\n\n  public Register(signUpViewModel:SignUpViewModel):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n\n    return this.httpClient.post<any>(\"/register\",signUpViewModel,{responseType:\"json\",observe:\"response\"})\n                          .pipe(map(response=>{\n                            if(response)\n                            {\n                                this.currentUserName=response.body.userName;\n                                sessionStorage['currentUser']=JSON.stringify(response.body);\n                                sessionStorage['XSRFRequestToken']=response.headers.get(\"XSRF-REQUEST-TOKEN\");\n                            }\n\n                            return response.body;\n\n                          }));\n\n  }\n\n  getUserByEmail(Email:string):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n    return  this.httpClient.get<any>(\"/api/getUserByEmail/\"+Email,{responseType:\"json\"});\n  }\n  \n\n  public Logout()\n  {\n    sessionStorage.removeItem('currentUser');\n    this.currentUserName=null;\n    this.router.navigate(['login']);\n  }\n\n  public isAuthenticated():boolean\n  {\n    var token=sessionStorage.getItem('currentUser')?\n              JSON.parse(sessionStorage.getItem('currentUser') as string).token:null;\n\n    \n    if(this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid is expired\n    }\n    else{\n      return true;  //token is valid\n    }\n    \n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginViewModel:LoginViewModel =new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService:LoginService,private router:Router,private jwtHelperService:JwtHelperService)\n  {\n\n  }\n\n  @ViewChild(\"userName\") userName:ElementRef|any=null;\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.userName.nativeElement.focus();\n    }, 500);\n  }\n\n  onLoginClick(event:any)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe({\n      next:(response)=>{\n\n        var token=sessionStorage.getItem('currentUser')? JSON.parse(sessionStorage.getItem('currentUser') as string):null;\n        if(token.role==\"Employee\")\n          this.router.navigateByUrl(\"tasks\");\n        else\n          this.router.navigateByUrl(\"dashboard\");\n      },\n      error:(error)=>{\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      }\n    });\n  }\n\n}\n","<form>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\r\n            <div class=\"card text-center\">\r\n                <div class=\"card-header bg-secondary text-start\">\r\n                  <h3>Login </h3>\r\n                  <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\r\n                </div>\r\n                <div class=\"card-body \">\r\n                    <div class=\"mb-3 mt-3 text-start\">\r\n                     <label for=\"UserName\" class=\"form-label\">Username </label>\r\n                    <input type=\"text\" #userName class=\"form-control\" placeholder=\"username\" name=\"username\" \r\n                        autofocus=\"autofocus\" [(ngModel)]=\"loginViewModel.Username\">\r\n                 </div>\r\n                 <div class=\"mb-3 text-start\">\r\n                    <label for=\"password\" class=\"form-label\">Password </label>\r\n                    <input type=\"password\" class=\"form-control\" placeholder=\"password\" name=\"password\" \r\n                        autofocus=\"autofocus\" [(ngModel)]=\"loginViewModel.Password\">\r\n                </div>\r\n                </div>\r\n                <div class=\"card-footer text-muted text-end\">\r\n                    <!-- <span class=\"text-danger\">{{loginError}} &nbsp;</span> -->\r\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\" >Login</button>\r\n                </div>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n\n  transform(value: any,separator:string=\", \"): any {\n    if(value==null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value,separator);\n    }\n    \n  }\n\n  private inWords = (n: any,separator:string) : any =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = (x: any) => Array.from(x);\n    const num = (x: any) => Number(x) || 0;\n    const str = (x: any) => String(x);\n    const isEmpty = (xs: any) => xs.length === 0;\n    const take = (n: any) => (xs: any) => xs.slice(0, n);\n    const drop = (n: any) => (xs: any) => xs.slice(n);\n    const reverse = (xs: any) => xs.slice(0).reverse();\n    const comp = (f: any) => (g: any) => (x: any) => f(g(x));\n    const not = (x: any) => !x;\n    const chunk = (n: any): any => (xs: any): any =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]: any) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group: any, i: any) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n),separator);\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n\n transform(value: Project[], currentPageIndex: number, pageSize: number): any\n    {\n    if (value == null)\n    {\n      return value;\n    }\n    \n    var start:number=currentPageIndex * pageSize;\n    var end:number=(Number(currentPageIndex) + 1) * pageSize;\n\n    let resultArray = [];\n    for (let i =start ; i < end ; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProjectsService } from './projects.service';\nimport { Project } from './project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers:[{provide:NG_ASYNC_VALIDATORS,useExisting:ProjectIDUniqueValidatorDirective,multi:true}]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n\n  constructor(private projectsService:ProjectsService) { \n\n  }\n\n  validate(control: AbstractControl):  Observable<ValidationErrors | null> {\n    return this.projectsService.getProjectByProjectID(control.value)\n                                .pipe(map((existingProject:Project)=>{\n                                    if(existingProject!=null)\n                                    {\n                                      return{uniqueProjectID:{valid:false}};\n                                    }\n                                    else\n                                    {\n                                      return null;\n                                    }\n                                }));\n\n  }\n\n}\n","import { bottom } from \"@popperjs/core\";\nimport { ClientLocation } from \"./client-location\";\nexport class Project {\n    projectID:number|any;\n    projectName:string|any;\n    dateOfStart:string|any;\n    teamSize:number|any;\n    active:boolean|any;\n    status:string|any;\n    clientLocationID:number|any;\n    clientLocation:ClientLocation|any;\n\n\n    constructor()\n    {\n       this.projectID=null;\n       this.projectName=null;\n       this.dateOfStart=null;\n       this.teamSize=null;\n       this.active=true;\n       this.status=null;\n       this.clientLocationID=null;\n       this.clientLocation=new ClientLocation();\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { BehaviorSubject, Observable, Observer, Subject} from 'rxjs';\nimport { Project } from './project';\nimport{map} from 'rxjs/operators'\nimport { ReturnStatement } from '@angular/compiler';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  public MySubject:BehaviorSubject<boolean>;\n\n  constructor(private httpClient:HttpClient) \n  { \n    this.MySubject=new BehaviorSubject<boolean>(false);\n  }\n  \n  toggleDetails()\n  {\n      this.MySubject.next(!this.MySubject.value);\n  }\n\n\n  getAllProjects():Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"/api/projects\",{responseType: \"json\"})\n          .pipe(map(\n              (data:Project[])=>{\n                for(let i=0;i<data.length;i++)\n                {\n                  //data[i].teamSize=data[i].teamSize*100;\n                }\n\n                return data;\n              }\n            ));\n  }\n\n  insertProject(newProject:Project):Observable<Project>\n  {\n\n    var requestHeaders = new HttpHeaders();\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n\n    return this.httpClient.post<Project>(\"/api/projects\",newProject,\n                      {headers:requestHeaders,responseType:\"json\"});\n  }\n\n  updateProject(existingProject:Project):Observable<Project>\n  {\n    return this.httpClient.put<Project>(\"/api/projects\",existingProject,{responseType:\"json\"});\n  }\n\n  deleteProject(projectID:number):Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectId=\"+projectID);\n  }\n\n  searchProjects(searchBy:string,searchText:string):Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"api/projects/search/\"+searchBy+\"/\"+searchText,{responseType:\"json\"});\n  }\n\n  getProjectByProjectID(ProjectID:number):Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"api/projects/searchbyprojectid/\"+ProjectID,{responseType:\"json\"});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CountriesService } from '../countries.service';\nimport { Country } from '../country';\nimport { CustomValidatorsService } from '../custom-validators.service';\nimport { LoginService } from '../login.service';\nimport { SignUpViewModel } from '../sign-up-view-model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signUpForm:FormGroup | any = null;\n  genders=[\"male\",\"female\"];\n  countries:Country[]=[];\n  registerError:string|null=null;\n\n  constructor(private countriesService:CountriesService,private formBuilder:FormBuilder,\n          private customValidatorsService:CustomValidatorsService,\n          private loginService:LoginService,private router:Router) \n  {\n\n  }\n\n  ngOnInit(): void {\n\n    this.countriesService.getCountries().subscribe((response)=>{\n      this.countries=response;\n    });\n\n    this.signUpForm=this.formBuilder.group({\n      personName:this.formBuilder.group({\n        firstName:[null,[Validators.required,Validators.minLength(2)]],\n        lastName:[null,[Validators.required,Validators.minLength(2)]]\n      }),\n      email: [null, [Validators.required, Validators.email], [this.customValidatorsService.DuplicateEmailValidator()], { updateOn: 'blur' }],\n      mobile:[null,[Validators.required,Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth:[\"2022-03-15\",[Validators.required,this.customValidatorsService.minimumAgeValidator(18)]],\n      password:[null,[Validators.required]],\n      confirmPassword:[null,[Validators.required]],\n      gender: [null,[Validators.required]],\n      countryID:[null,[Validators.required]],\n      receiveNewsLetters:null,\n      skills:this.formBuilder.array([])\n    },{\n      validators:[\n        this.customValidatorsService.compareValidator(\"confirmPassword\",\"password\")\n      ]\n    });\n\n\n\n    this.signUpForm.valueChanges.subscribe((value:any)=>{\n     // console.log(value);\n    });\n    \n  }\n\n  onSubmitClick()\n  {\n      //Display current form value\n      (this.signUpForm as any)[\"submitted\"]=true;\n      console.log(this.signUpForm.value);\n\n      if(this.signUpForm.valid)\n      {\n        var signUpViewModel =this.signUpForm.value as SignUpViewModel;\n        this.loginService.Register(signUpViewModel).subscribe({\n          next:(response)=>{\n            this.router.navigate([\"tasks\"]);\n          },\n          error:(error)=>{\n            console.log(error);\n            this.registerError=\"Unable to submit\";\n          }\n        });\n\n      }\n  }\n\n  onAddSkill()\n  {\n    var formGroup=this.formBuilder.group({\n      skillName:[null,[Validators.required]],\n      sKillLevel:[null,[Validators.required]]\n    });\n    \n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n\n  }\n\n  onRemoveClick(index:number)\n  {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n\n}\n","<div class=\"row mt-5\">\n    <div class=\"col-md-8 col-xl-6 mx-auto\">\n        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n            <div class=\"card mt-1\">\n                <div class=\"card-header\">\n                    <h4>Sign Up</h4>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row mb-2\" formGroupName=\"personName\">\n                        <label for=\"firstName\" class=\"col-md-4 col-form-label-sm\">First Name:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" id=\"firstName\" name=\"firstName\" class=\"form-control form-control-sm\" \n                                placeholder=\"First Name\" formControlName=\"firstName\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.firstName').invalid && \n                                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                                        'is-valid': signUpForm.get('personName.firstName').valid && \n                                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted)\n                                    }\" >\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && \n                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched ||signUpForm.submitted ) \n                                && signUpForm.get('personName.firstName').errors?.required \">First name can't be blank</span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && \n                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched ||signUpForm.submitted ) \n                                && signUpForm.get('personName.firstName').errors?.minlength \">First name should contain at least 2 characters</span>\n                            \n                        </div>\n                    </div>\n                    <div class=\"row mb-2\" formGroupName=\"personName\">\n                        <label for=\"lastName\" class=\"col-md-4 col-form-label-sm\">Last Name:</label>\n                        <div class=\"col-md-8\" >\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" class=\"form-control form-control-sm\" \n                                placeholder=\"Last Name\" formControlName=\"lastName\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.lastName').invalid && \n                                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                                        'is-valid': signUpForm.get('personName.lastName').valid && \n                                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted)\n                                    }\" > \n                                \n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && \n                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched ||signUpForm.submitted ) \n                                && signUpForm.get('personName.lastName').errors?.required \">Last name can't be blank</span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && \n                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched ||signUpForm.submitted ) \n                                && signUpForm.get('personName.lastName').errors?.minlength \">Last name should contain at least 2 characters</span>\n                                \n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label for=\"email\" class=\"col-md-4 col-form-label-sm\" >EMail:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" id=\"email\" name=\"email\" class=\"form-control form-control-sm\"  placeholder=\"Email\" formControlName=\"email\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('email').invalid && \n                                                (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                                            'is-valid': signUpForm.get('email').valid && \n                                                (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted)\n                                        }\" > \n                                    \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('email').errors?.required \">Email can't be blank</span>\n\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('email').errors?.email \">Email is invalid</span>\n                            \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('email').errors?.uniqueEmail \">Email is already exists</span>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label for=\"mobile\" class=\"col-md-4 col-form-label-sm\" >Mobile:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" id=\"mobile\" name=\"mobile\" class=\"form-control form-control-sm\" placeholder=\"Mobile\" formControlName=\"mobile\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('mobile').invalid && \n                                                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                                                'is-valid': signUpForm.get('mobile').valid && \n                                                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted)\n                                            }\" > \n                                    \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && \n                                (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('mobile').errors?.required \">Mobile can't be blank</span>\n\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && \n                                (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('mobile').errors?.pattern \">Mobile is invalid</span>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\" >\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label-sm\" >Date Of Birth</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" class=\"form-control form-control-sm\" placeholder=\"Date Of Birth\" formControlName=\"dateOfBirth\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('dateOfBirth').invalid && \n                                                    (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                                            'is-valid': signUpForm.get('dateOfBirth').valid && \n                                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted)\n                                        }\" > \n                                    \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && \n                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('dateOfBirth').errors?.required \">Date of Birth can't be blank</span>\n                            \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && \n                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('dateOfBirth').errors?.minAge \">Minimum age must be 18 year</span>\n\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label for=\"password\" class=\"col-md-4 col-form-label-sm\">Password:</label>\n                        <div class=\"col-md-8\" >\n                            <input type=\"text\" id=\"password\" name=\"password\" class=\"form-control form-control-sm\" \n                                placeholder=\"Password\" formControlName=\"password\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('password').invalid && \n                                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                                        'is-valid': signUpForm.get('password').valid && \n                                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted)\n                                    }\" > \n                                \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && \n                                (signUpForm.get('password').dirty || signUpForm.get('password').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('password').errors?.required \">Password can't be blank</span>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label for=\"confirmPassword\" class=\"col-md-4 col-form-label-sm\">Confirm Password:</label>\n                        <div class=\"col-md-8\" >\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" class=\"form-control form-control-sm\" \n                                placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" \n                                [ngClass]=\"{'is-invalid': signUpForm.get('confirmPassword').invalid && \n                                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                                        'is-valid': signUpForm.get('confirmPassword').valid && \n                                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted)\n                                    }\" > \n                                \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && \n                                (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('confirmPassword').errors?.required \">Confirm Password can't be blank</span>\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && \n                                (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('confirmPassword').errors?.compareValidator \">Password and Confirm Password do not match</span>\n\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label class=\"col-md-4 col-form-label-sm\">Gender:</label>\n                        <div class=\"col-md-8\">\n                            <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\" >\n                                <input type=\"radio\" [id]=\"gender\" name=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                                <label [for]=\"gender\" class=\"form-check-lable\">{{gender}}</label>\n                            </div>\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && \n                                (signUpForm.get('gender').dirty || signUpForm.get('gender').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('gender').errors?.required \">Please select gender</span>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label class=\"col-md-4 col-form-label-sm\">Country:</label>\n                        <div class=\"col-md-8\">\n                            <select id=\"countryID\" name=\"countryID\" class=\"form-select form-select-sm \" formControlName=\"countryID\"\n                                [ngClass]=\"{'is-invalid': signUpForm.get('countryID').invalid && \n                                                (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                                            'is-valid': signUpForm.get('countryID').valid && \n                                            (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted)\n                                        }\" > \n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">{{country.countryName}}</option>\n                            </select>\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && \n                                (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched ||signUpForm.submitted ) \n                                    && signUpForm.get('countryID').errors?.required \">Please select country</span>\n                        </div>\n\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label class=\"col-md-4 col-form-label-sm\"></label>\n                        <div class=\"col-md-8\">\n                            <input type=\"checkbox\" id=\"receiveNewsLetters\" name=\"receiveNewsLetters\" value=\"true\" \n                                class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n                            <label for=\"receiveNewsLetters\" class=\"form-check-label\" >Receive News Letters</label>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <label class=\"col-md-4 col-form-label-sm\">Skills:</label>\n                        <div class=\"col-md-8\" formArrayName=\"skills\" >\n                            <div class=\"row mb-2\" *ngFor=\"let skill of signUpForm.get('skills').controls;let i=index\" \n                                    [formGroupName]=\"i\" >\n                                <div class=\"col-sm-5\">\n                                    <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control form-control-sm\" [ngClass]=\"{\n                                        'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n                        \n                                        'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                                    \n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <select name=\"sKillLevel\" id=\"sKillLevel\" formControlName=\"sKillLevel\" class=\"form-select form-select-sm\" [ngClass]=\"{\n                                        'is-invalid': skill.get('sKillLevel').invalid && (skill.get('sKillLevel').dirty || skill.get('sKillLevel').touched || signUpForm.submitted),\n                        \n                                        'is-valid': skill.get('sKillLevel').valid && (skill.get('sKillLevel').dirty || skill.get('sKillLevel').touched || signUpForm.submitted) }\">\n                                        <option value=\"null\">Please Select</option>\n                                        <option value=\"Beginner\">Beginner</option>\n                                        <option value=\"Intermediate\">Intermediate</option>\n                                        <option value=\"Professional\">Professional</option>\n                                        <option value=\"Expert\">Expert</option>\n                                      </select>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"onRemoveClick(i)\" >Remove</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"btb btn-primary\"  (click)=\"onAddSkill()\"> Add Skill</button>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-success float-end\"  >Create Account</button>\n                    <div class=\"text-danger\" >{{registerError}}</div>\n                </div>\n                {{signUpForm.value | json}}\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers:[{provide:NG_VALIDATORS,useExisting:TeamSizeValidatorDirective,multi:true}]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n:number|any=0;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let currentValue=control.value;\n\n    let isValid=currentValue % this.n == 0;\n    if(isValid)\n    {\n      return null;\n    }\n    else\n    {\n      return {divisible:{valid:false}};\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Project","$","FilterPipe","i0","ctx_r51","ctx_r53","i_r48","ctx_r55","ProjectsComponent","constructor","projectsService","clientLocationsService","ngOnInit","getAllProjects","subscribe","next","response","projects","showLoading","calculateNoOfPages","clientLocations","getClientLocations","onSaveClick","newForm","valid","newProject","clientLocation","clientLocationID","insertProject","p","projectID","projectName","dateOfStart","teamSize","active","status","push","trigger","error","console","log","onEditClick","event","index","editForm","resetForm","setTimeout","editProject","split","reverse","join","editIndex","prjEName","nativeElement","focus","onUpdateClick","updateProject","onDeleteClick","deleteIndex","deleteProject","onDeleteConfirmClick","splice","onSearchClick","onSearchTextKeyup","onNewClick","prjID","onHideShowDetails","toggleDetails","isAllCheckedChange","prjs","prj","toArray","i","length","isAllChecked","filterPipe","resultProjects","transform","searchBy","searchText","noOfPages","Math","ceil","pageSize","pages","pageIndex","currentPageIndex","onPageIndexClicked","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///"}
{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAOO,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,uEAAwB;QAAA,uEAAY;QAApC,4DAAwB;QAAY,oEAAG;QAEvC,ywCAOA;QAToC,4DAAG;;;;;;;;;;;;;;;;;;;;;;ACCmC;AACA;AACI;AACV;AACG;;;AAEvE,MAAM,MAAM,GAAW;IACf,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;IAC7C,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,6EAAc,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,EAAE;IAC3D,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,gFAAe,EAAC,aAAa,EAAC,CAAC,uFAAuB,CAAC,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,EAAC;IACpG,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,mFAAc,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,EAAC;IAC1D,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,4JAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE;CAErG,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,aAAa,EAAC,IAAI,EAAC,kBAAkB,EAAC,8DAAiB,EAAC,CAAC,CAAC,EACpG,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;ACd8C;AAE2E;;;;;;;;;;ICEvI,wEAAyG;IACvG,wEAAqF;IAAA,oEAAS;IAAA,4DAAI;IACpG,4DAAK;;IAD4C,0DAAqC;IAArC,6IAAqC;;;;IAEtF,wEAA4G;IAC1G,uEAAyD;IAAA,gEAAK;IAAA,4DAAI;IACpE,4DAAK;;IADiB,0DAAoC;IAApC,6IAAoC;;;;IAK1D,wEAAyG;IACvG,uEAA2D;IAAA,mEAAQ;IAAA,4DAAI;IACzE,4DAAK;;IADiB,0DAAsC;IAAtC,6IAAsC;;;;IAE5D,wEAAyG;IACvG,uEAAwD;IAAA,kEAAO;IAAA,4DAAI;IACrE,4DAAK;;IADiB,0DAAmC;IAAnC,6IAAmC;;;;IAEzD,wEAAgE;IAC9D,wEAAqD;IAAjC,sRAAS,4BAAqB,IAAC;IAAE,iEAAM;IAAA,4DAAI;IACjE,4DAAK;;;;IACL,wEAAgE;IAC9D,uEAA8C;IAAA,gEAAK;IAAA,4DAAI;IACzD,4DAAK;;IADiB,0DAAyB;IAAzB,6IAAyB;;;;IAE/C,wEAAgE;IAC9D,uEAA+C;IAAA,kEAAO;IAAA,4DAAI;IAC5D,4DAAK;;IADiB,0DAA0B;IAA1B,6IAA0B;;;IAEhD,wEAAiE;IAC/D,2EAAyC;IAAA,uDAAgC;IAAA,4DAAO;IAClF,4DAAK;;;IADsC,0DAAgC;IAAhC,oGAAgC;;;ADhB9E,MAAM,YAAY;IAGvB,YAAmB,YAAyB,EAAS,YAAyB,EACxD,mBAAuC,EAAS,MAAa;QADhE,iBAAY,GAAZ,YAAY,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAa;QACxD,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAO;IAGnF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,EAAE;YACpC,IAAG,KAAK,YAAY,0DAAa,EACjC;gBACE,IAAI,QAAQ,GAAC,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAC,KAAI,CAAC,YAAY,CAAC,eAAe,EAAC,YAAW,CAAC;gBAE/F,IAAI,MAAM,GAAC,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,GAAC,GAAG,GAAC,QAAQ,GAAE,eAAe,GAAC,KAAK,CAAC,GAAG,CAAC;gBAE/E,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;aAClD;QAEH,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,QAAQ,CAAC,MAAmB;QAE1B,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC;YACzB,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAE,CAAC,CAAC,MAAM,CAAC;IACnG,CAAC;;wEA7BU,YAAY;0GAAZ,YAAY;QCjBzB,yEAA4D;QACxD,yEAA6B;QAC3B,uEAAiC;QAAC,iFAAqB;QAAA,4DAAI;QAC3D,4EAA2L;QACzL,qEAAyC;QAC3C,4DAAS;QACT,yEAAiD;QAC/C,wEAA4C;QAC1C,sGAEK;QACL,sGAEK;QACL,yEAAqB;QACnB,wEAA8C;QAAA,iEAAK;QAAA,4DAAI;QACzD,4DAAK;QACL,wGAEK;QACL,wGAEK;QACL,wGAEK;QACL,wGAEK;QACL,wGAEK;QACL,wGAEK;QACP,4DAAK;QACL,4EAAqB;QACjB,4EAA4C;QAAA,oEAA4B;QAAA,4DAAO;QAC/E,wEAAwF;QACxF,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QACjE,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAmE;QACjE,sFAAgD;QACpD,4DAAM;;;QAtC0B,0DAAiF;QAAjF,yJAAiF;QAGjF,0DAAoF;QAApF,4JAAoF;QAIpF,0DAAyB;QAAzB,8IAAyB;QAEzB,0DAAiF;QAAjF,yJAAiF;QAGjF,0DAAiF;QAAjF,yJAAiF;QAGjF,0DAAwC;QAAxC,0GAAwC;QAGxC,0DAAwC;QAAxC,0GAAwC;QAGxC,0DAAwC;QAAxC,0GAAwC;QAGvC,0DAAwC;QAAxC,0GAAwC;QAY1C,0DAAqC;QAArC,+FAAqC;8jBD/BvD,CAAC,6DAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb0C;AAG3B;AACW;AAEF;AACT;AACgC;AAC0B;AACrC;AACG;AACT;AACM;AACR;AACgB;AACtB;;;AAsC/C,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;4GAZb;QACT;YACE,OAAO,EAAC,oEAAiB;YACzB,QAAQ,EAAC,wFAAqB;YAC9B,KAAK,EAAC,IAAI;SACX;QACD;YACE,OAAO,EAAC,oEAAiB;YACzB,QAAQ,EAAC,kHAAiC;YAC1C,KAAK,EAAC,IAAI;SACX;KACJ,YAzBU;YACP,qEAAa;YACb,0FAAuB;YACvB,iEAAgB;YAChB,qEAAc;YACd,+DAAY;YACZ,kEAAiB,CAAC;gBAChB,MAAM,EAAC;oBACL,WAAW,EAAC,GAAE,EAAE;wBACd,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAW,CAAC,CAAC,KAAK,EAAC,KAAI,CAAC;oBACvH,CAAC;iBACF;aACF,CAAC;SACH;oIAeU,SAAS,mBAlClB,wDAAY;QACZ,6EAAc;QACd,gFAAe;QACf,uEAAc;QACd,6EAAiB,aAGjB,qEAAa;QACb,0FAAuB;QACvB,iEAAgB;QAChB,qEAAc;QACd,+DAAY;;;;;;;;;;;;;;;;;;;;;;;;AC5B+C;;;;;;;;;;;ICG7C,qEAA4D;;;IAA9C,oFAAoB;;;IAiBhC,0EAAgD;IAC5C,wEAC0D;IACtD,uDACJ;IAAA,4DAAI;IACJ,0EAAiD;IACjD,0EAA4B;IACxB,4MACJ;IAAA,4DAAM;IACN,4DAAM;IACV,4DAAM;;;IATmD,0DAA6B;IAA7B,wJAA6B;IAE9E,0DACJ;IADI,qFACJ;IACsB,0DAA0B;IAA1B,wFAA0B;;ADjBjE,MAAM,cAAc;IAKzB,YAAoB,YAAyB,EAAS,MAAa,EAAS,gBAAiC;QAAzF,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;QAH7G,mBAAc,GAAiB,IAAI,oEAAc,EAAE,CAAC;QACpD,eAAU,GAAW,EAAE,CAAC;QAOD,aAAQ,GAAgB,IAAI,CAAC;IAFpD,CAAC;IAID,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACtC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,YAAY,CAAC,KAAS;QAEpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,EAAC,CAAC,QAAQ,EAAC,EAAE;gBAEf,IAAI,KAAK,GAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAW,CAAC,EAAC,KAAI,CAAC;gBAClH,IAAG,KAAK,CAAC,IAAI,IAAE,UAAU;oBACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;;oBAE7C,gDAAgD;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAC,WAAW,CAAC,CAAC,CAAC;YACjD,CAAC;YACD,KAAK,EAAC,CAAC,KAAK,EAAC,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,8BAA8B,CAAC;YACnD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;4EAnCU,cAAc;4GAAd,cAAc;;;;;;QCX3B,uEAAM;QACF,yEAAsB;QAClB,yEAAgD;QAC5C,yEAA8B;QAC1B,yEAAiD;QAC/C,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,0GAA4D;QAC9D,4DAAM;QACN,yEAAwB;QACpB,yEAAkC;QACjC,4EAAyC;QAAA,qEAAS;QAAA,4DAAQ;QAC3D,+EACgE;QAAtC,oMAAqC;QAD/D,4DACgE;QACnE,4DAAM;QACN,2EAA6B;QAC1B,6EAAyC;QAAA,qEAAS;QAAA,4DAAQ;QAC1D,6EACgE;QAAtC,oMAAqC;QAD/D,4DACgE;QACpE,4DAAM;QACN,4DAAM;QACN,2EAA6C;QAEzC,8EAAgE;QAAhC,6IAAS,wBAAoB,IAAC;QAAE,iEAAK;QAAA,4DAAS;QAC9E,6GAUM;QACV,4DAAM;QACR,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAhC+C,0DAAgB;QAAhB,gFAAgB;QAMxB,0DAAqC;QAArC,gGAAqC;QAKrC,0DAAqC;QAArC,gGAAqC;QAMzD,0DAAe;QAAf,0EAAe;;;;;;;;;;;;;;;;;;;;;;;ACtBmD;;;;;;;;;ICiBpE,2EAEqE;IAAA,oFAAyB;IAAA,4DAAO;;;IAErG,2EAEsE;IAAA,0GAA+C;IAAA,4DAAO;;;IAe5H,2EAEoE;IAAA,mFAAwB;IAAA,4DAAO;;;IAEnG,2EAEqE;IAAA,yGAA8C;IAAA,4DAAO;;;IActH,2EAEsD;IAAA,+EAAoB;IAAA,4DAAO;;;IAEjF,2EAEmD;IAAA,2EAAgB;IAAA,4DAAO;;;IAE1E,2EAEyD;IAAA,kFAAuB;IAAA,4DAAO;;;IAavF,2EAEuD;IAAA,gFAAqB;IAAA,4DAAO;;;IAEnF,2EAEsD;IAAA,4EAAiB;IAAA,4DAAO;;;IAa9E,2EAE4D;IAAA,uFAA4B;IAAA,4DAAO;;;IAE/F,2EAE0D;IAAA,sFAA2B;IAAA,4DAAO;;;IAe5F,2EAEyD;IAAA,kFAAuB;IAAA,4DAAO;;;IAcvF,2EAEgE;IAAA,0FAA+B;IAAA,4DAAO;;;IACtG,2EAEwE;IAAA,qGAA0C;IAAA,4DAAO;;;IAOzH,0EAAgF;IAC5E,uEAAmH;IACnH,4EAA+C;IAAA,uDAAU;IAAA,4DAAQ;IACrE,4DAAM;;;IAFkB,0DAAa;IAAb,0EAAa;IAC1B,0DAAc;IAAd,2EAAc;IAA0B,0DAAU;IAAV,2EAAU;;;IAE7D,2EAEuD;IAAA,+EAAoB;IAAA,4DAAO;;;IAa9E,6EAAsE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA5D,wFAA2B;IAAC,0DAAuB;IAAvB,wFAAuB;;;IAEjG,2EAE0D;IAAA,gFAAqB;IAAA,4DAAO;;;;;IAetF,0EAC6B;IACzB,0EAAsB;IAClB,uEAG4I;IAEhJ,4DAAM;IACN,0EAAsB;IAClB,6EAG+I;IAC3I,6EAAqB;IAAA,wEAAa;IAAA,4DAAS;IAC3C,6EAAyB;IAAA,mEAAQ;IAAA,4DAAS;IAC1C,6EAA6B;IAAA,wEAAY;IAAA,4DAAS;IAClD,8EAA6B;IAAA,wEAAY;IAAA,4DAAS;IAClD,8EAAuB;IAAA,kEAAM;IAAA,4DAAS;IACxC,4DAAS;IACf,4DAAM;IACN,2EAAsB;IAClB,8EAAgF;IAA5B,sVAAS,4BAAgB,IAAC;IAAE,kEAAM;IAAA,4DAAS;IACnG,4DAAM;IACV,4DAAM;;;;;IAvBE,gFAAmB;IAE0H,0DAGF;IAHE,waAGF;IAIjC,0DAGoC;IAHpC,8aAGoC;;AD1L3K,MAAM,eAAe;IAU1B,YAAoB,gBAAiC,EAAS,WAAuB,EACrE,uBAA+C,EAC/C,YAAyB,EAAS,MAAa;QAF3C,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAY;QACrE,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAT/D,eAAU,GAAmB,IAAI,CAAC;QAClC,YAAO,GAAC,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;QAC1B,cAAS,GAAW,EAAE,CAAC;QACvB,kBAAa,GAAa,IAAI,CAAC;QAE/B,aAAQ,GAAU,IAAI,CAAC;IAOvB,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YACzD,IAAI,CAAC,SAAS,GAAC,QAAQ,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAChC,SAAS,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,QAAQ,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9D,CAAC;YACF,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;YACtI,MAAM,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,EAAC,8DAAkB,CAAC,cAAc,CAAC,CAAC,CAAC;YACtE,WAAW,EAAC,CAAC,YAAY,EAAC,CAAC,+DAAmB,EAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;YACrG,QAAQ,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;YACrC,eAAe,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;YAC5C,MAAM,EAAE,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;YACpC,SAAS,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;YACtC,kBAAkB,EAAC,IAAI;YACvB,MAAM,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SAClC,EAAC;YACA,UAAU,EAAC;gBACT,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,iBAAiB,EAAC,UAAU,CAAC;aAC5E;SACF,CAAC,CAAC;QAIH,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAS,EAAC,EAAE;YAElD,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;IAGL,CAAC;IAGD,aAAa;QAET,4BAA4B;QAC3B,IAAI,CAAC,UAAkB,CAAC,WAAW,CAAC,GAAC,IAAI,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EACxB;YACE,IAAI,eAAe,GAAE,IAAI,CAAC,UAAU,CAAC,KAAwB,CAAC;YAC9D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;gBACpD,IAAI,EAAC,CAAC,QAAQ,EAAC,EAAE;oBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAK,EAAC,CAAC,KAAK,EAAC,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,aAAa,GAAC,kBAAkB,CAAC;gBACxC,CAAC;aACF,CAAC,CAAC;SAEJ;IACL,CAAC;IAED,UAAU;QAER,IAAI,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnC,SAAS,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;YACtC,UAAU,EAAC,CAAC,IAAI,EAAC,CAAC,+DAAmB,CAAC,CAAC;SACxC,CAAC,CAAC;QAES,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE7D,CAAC;IAED,aAAa,CAAC,KAAY;QAEZ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;;8EA1FU,eAAe;6GAAf,eAAe;QCf5B,yEAAsB;QAClB,yEAAuC;QACnC,0EAA4D;QAA7B,2IAAY,mBAAe,IAAC;QACvD,yEAAuB;QACnB,yEAAyB;QACrB,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QACpB,4DAAM;QACN,yEAAuB;QACnB,yEAAiD;QAC7C,2EAA0D;QAAA,uEAAW;QAAA,4DAAQ;QAC7E,0EAAsB;QAClB,uEAMY;QAChB,gHAEqG;QAErG,gHAE4H;QAE5H,4DAAM;QACV,4DAAM;QACN,0EAAiD;QAC7C,6EAAyD;QAAA,sEAAU;QAAA,4DAAQ;QAC3E,0EAAuB;QACnB,wEAMY;QAEhB,gHAEmG;QAEnG,gHAE0H;QAE1H,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAAuD;QAAA,kEAAM;QAAA,4DAAQ;QACrE,0EAAsB;QAClB,wEAKgB;QAEhB,gHAEiF;QAEjF,gHAE0E;QAE1E,gHAEuF;QAC3F,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAAwD;QAAA,mEAAO;QAAA,4DAAQ;QACvE,0EAAsB;QAClB,wEAKoB;QAEpB,gHAEmF;QAEnF,gHAE8E;QAClF,4DAAM;QACV,4DAAM;QACN,2EAAuB;QACnB,6EAA6D;QAAA,yEAAa;QAAA,4DAAQ;QAClF,0EAAsB;QAClB,wEAKgB;QAEhB,gHAE+F;QAE/F,gHAE4F;QAEhG,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAAyD;QAAA,qEAAS;QAAA,4DAAQ;QAC1E,0EAAuB;QACnB,wEAMY;QAEZ,gHAEuF;QAC3F,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAAgE;QAAA,6EAAiB;QAAA,4DAAQ;QACzF,0EAAuB;QACnB,wEAMY;QAEZ,gHAEsG;QACtG,gHAEyH;QAE7H,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAA0C;QAAA,mEAAO;QAAA,4DAAQ;QACzD,0EAAsB;QAClB,8GAGM;QACN,gHAEkF;QACtF,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAA0C;QAAA,oEAAQ;QAAA,4DAAQ;QAC1D,0EAAsB;QAClB,8EAKgB;QACZ,8EAAqB;QAAA,yEAAa;QAAA,4DAAS;QAC3C,oHAAsG;QAC1G,4DAAS;QACT,gHAEsF;QAC1F,4DAAM;QAEV,4DAAM;QACN,2EAAsB;QAClB,wEAAkD;QAClD,0EAAsB;QAClB,wEACkE;QAClE,6EAA0D;QAAA,gFAAoB;QAAA,4DAAQ;QAC1F,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,6EAA0C;QAAA,mEAAO;QAAA,4DAAQ;QACzD,2EAA8C;QAC1C,+GAwBM;QACV,4DAAM;QACV,4DAAM;QACN,8EAAsE;QAAvB,wIAAS,gBAAY,IAAC;QAAE,sEAAS;QAAA,4DAAS;QAC7F,4DAAM;QACN,2EAAyB;QACrB,8EAA4C;QAAA,0EAAc;QAAA,4DAAS;QACnE,2EAA0B;QAAA,wDAAiB;QAAA,4DAAM;QACrD,4DAAM;QACN,wDACJ;;QAAA,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QA/NQ,0DAAwB;QAAxB,qFAAwB;QAWN,2DAIM;QAJN,igBAIM;QACa,0DAEqC;QAFrC,+XAEqC;QAErC,0DAEsC;QAFtC,gYAEsC;QASzD,0DAIM;QAJN,2fAIM;QAEa,0DAEoC;QAFpC,0XAEoC;QAEpC,0DAEqC;QAFrC,2XAEqC;QAQxD,0DAIU;QAJV,uaAIU;QAEa,0DAEsB;QAFtB,oTAEsB;QAEtB,0DAEmB;QAFnB,iTAEmB;QAEnB,0DAEyB;QAFzB,uTAEyB;QAOhD,0DAIc;QAJd,6aAIc;QAES,0DAEuB;QAFvB,yTAEuB;QAEvB,0DAEsB;QAFtB,wTAEsB;QAO7C,0DAIU;QAJV,2cAIU;QAEa,0DAE4B;QAF5B,kVAE4B;QAE5B,0DAE0B;QAF1B,gVAE0B;QASjD,0DAIM;QAJN,ybAIM;QAEiB,0DAEyB;QAFzB,mUAEyB;QAQhD,0DAIM;QAJN,meAIM;QAEiB,0DAEgC;QAFhC,sWAEgC;QAChC,0DAEwC;QAFxC,8WAEwC;QAOA,0DAAU;QAAV,gFAAU;QAIlD,0DAEuB;QAFvB,yTAEuB;QAO9C,0DAIU;QAJV,+bAIU;QAEkB,0DAAY;QAAZ,kFAAY;QAEjB,0DAE0B;QAF1B,wUAE0B;QAeb,2DAAqC;QAArC,0GAAqC;QA+B3D,0DAAiB;QAAjB,kFAAiB;QAE/C,0DACJ;QADI,mKACJ;;;;;;;;;;;;;;;;;;ACzNL,MAAM,cAAc;IAKzB,YAAoB,UAAsB,EAAS,SAAmB;QAAlD,eAAU,GAAV,UAAU,CAAY;QAAS,cAAS,GAAT,SAAS,CAAU;QAHtD,UAAK,GAAiB,IAAI,CAAC;QACrB,UAAK,GAAQ,EAAE,CAAC;IAItC,CAAC;IAMD,QAAQ;QAEN,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAC,OAAO,EAAC,8BAA8B,CAAC,CAAC;QACpF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAC,YAAY,EAAC,gBAAgB,CAAC,CAAC;QAEvE,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAEhE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE7D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,KAAK,GAAC,mBAAmB,CAAC;IACjC,CAAC;IAGD,YAAY,CAAC,KAAS;QAEpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAC,WAAW,EAAC,YAAY,CAAC;QACjE,sFAAsF;IACxF,CAAC;IAGD,YAAY,CAAC,KAAS;QAEpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAC,WAAW,EAAC,UAAU,CAAC,CAAC;QAChE,mFAAmF;IACrF,CAAC;;4EA7CU,cAAc;4GAAd,cAAc;sJAAd,wBAEV,0FAFU,wBAEV;;;;;;;;;;;;;;;;;;;;ACN0F;;AAOtF,MAAM,sCAAsC;IAGjD,gBAAgB,CAAC;IAEjB,QAAQ,CAAC,OAAwB;QAC/B,IAAI,OAAO,GAAC,IAAI,CAAC;QAEjB,IAAG,OAAO,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,SAAS,EACzE;YACE,OAAO,GAAC,KAAK,CAAC;SACf;QAED,IAAG,OAAO,EACV;YACE,OAAO,IAAI,CAAC;SACb;aACG;YACF,OAAO,EAAC,oBAAoB,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,CAAC;SAC7C;IAEH,CAAC;;4HArBU,sCAAsC;oIAAtC,sCAAsC,yIAFvC,CAAC,EAAC,OAAO,EAAC,yDAAa,EAAC,WAAW,EAAC,sCAAsC,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC;;;;;;;;;;;;;;;;;ACD5F,MAAM,wBAAwB;IAEnC,YAAmB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAGpD,CAAC;;gGALU,wBAAwB;sHAAxB,wBAAwB;;;;;;;;;;;;;;;;;;;ACJmE;AAEnE;;;AAQ9B,MAAM,iCAAiC;IAG5C,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;IAEnD,CAAC;IAED,QAAQ,CAAC,OAAwB;QAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC;aACnC,IAAI,CAAC,mDAAG,CAAC,CAAC,eAAuB,EAAC,EAAE;YACjC,IAAG,eAAe,IAAE,IAAI,EACxB;gBACE,OAAM,EAAC,eAAe,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,CAAC;aACvC;iBAED;gBACE,OAAO,IAAI,CAAC;aACb;QACL,CAAC,CAAC,CAAC,CAAC;IAElC,CAAC;;kHApBU,iCAAiC;+HAAjC,iCAAiC,oIAFlC,CAAC,EAAC,OAAO,EAAC,+DAAmB,EAAC,WAAW,EAAC,iCAAiC,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC;;;;;;;;;;;;;;;;;ACJ7F,MAAM,iBAAiB;IAK5B,YAAoB,gBAAiC,EAAS,WAA4B;QAAtE,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAiB;QAFpE,MAAC,GAAQ,CAAC,CAAC;QAI/B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAED,QAAQ;QAEN,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAE,EACxB;YACE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,CAAC,CAAC;SAC1E;IAEH,CAAC;;kFAjBU,iBAAiB;+GAAjB,iBAAiB;;;;;;;;;;;;;;;;;ACJ+D;;AAMtF,MAAM,0BAA0B;IAGrC;QAE+B,MAAC,GAAY,CAAC,CAAC;IAF9B,CAAC;IAIjB,QAAQ,CAAC,OAAwB;QAC/B,IAAI,YAAY,GAAC,OAAO,CAAC,KAAK,CAAC;QAE/B,IAAI,OAAO,GAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACvC,IAAG,OAAO,EACV;YACE,OAAO,IAAI,CAAC;SACb;aAED;YACE,OAAO,EAAC,SAAS,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,CAAC;SAClC;IACH,CAAC;;oGAnBU,0BAA0B;wHAA1B,0BAA0B,2KAF3B,CAAC,EAAC,OAAO,EAAC,yDAAa,EAAC,WAAW,EAAC,0BAA0B,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC;;;;;;;;;;;;;;;;;ACEhF,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;ACC4B;AACQ;AAC6B;AACf;;;AAGrE,MAAM,MAAM,GAAQ;IAClB,EAAC,IAAI,EAAC,UAAU,EAAC,WAAW,EAAC,CAAC,8FAAuB,CAAC,EAAC,IAAI,EAAC,EAAC,YAAY,EAAC,UAAU,EAAC,EAAC,QAAQ,EAAC;YAC7F,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,6EAAc,EAAC;SACxC,EAAC;CACH,CAAC;AAWK,MAAM,qBAAqB;;0FAArB,qBAAqB;kHAArB,qBAAqB;sHAPvB;YACP,yDAAY;YACZ,kEAAqB,CAAC,MAAM,CAAC;SAC9B,EACQ,yDAAY;mIAGV,qBAAqB,cAN9B,yDAAY,wEAGL,yDAAY;;;;;;;;;;;;;;;;;;;AClB6C;AACe;AAC5B;;AAehD,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAPhB;YACP,4FAAqB;YACrB,+DAAY;SACb;mIAIU,cAAc,mBATvB,6EAAc,aAGd,4FAAqB;QACrB,+DAAY,aAEL,6EAAc;;;;;;;;;;;;;;;;;;;;;;;ACNlB,MAAM,uBAAuB;IAGlC,YAAoB,YAAyB,EAAS,MAAa,EAAS,gBAAiC;QAAzF,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;IAE7G,CAAC;IACH,WAAW,CAAC,KAA4B;QAEtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,KAAK,GAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAW,CAAC,CAAC,KAAK,EAAC,KAAI,CAAC;QAG7E,IAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI;YAC7E,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EACpC;YACE,OAAO,IAAI,CAAC;SACb;aAED;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;8FAvBY,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;ACKb,MAAM,uBAAuB;IAGlC,aAAa,CAAC,SAAiC;QAE7C,IAAG,SAAS,CAAC,QAAQ,IAAI,IAAI,EAC7B;YACE,OAAO,IAAI,CAAC;SACb;aAED;YACE,OAAO,OAAO,CAAC,iCAAiC,CAAC,CAAC;SACnD;IACH,CAAC;;8FAbU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;ACHb,MAAM,qBAAqB;IAGhC,gBAAgB,CAAC;IAEjB,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,IAAI,WAAW,GAAC,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;QAC3B,IAAG,cAAc,CAAC,aAAa,CAAC,IAAE,IAAI,EACtC;YACE,WAAW,GAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;SACvD;QAED,OAAO,GAAC,OAAO,CAAC,KAAK,CAAC;YACpB,UAAU,EAAC;gBACT,aAAa,EAAC,SAAS,GAAC,WAAW,CAAC,KAAK;aAC1C;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;;0FAnBU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;ACLyG;AAEtF;;AAKhC,MAAM,iCAAiC;IAE5C,gBAAgB,CAAC;IAEjB,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,yCAAG,CAAC;YACjC,IAAI,EAAE,CAAC,KAAoB,EAAC,EAAE;gBAC5B,IAAG,KAAK,YAAY,8DAAY,EAChC;oBACE,4BAA4B;iBAC7B;YACH,CAAC;YACD,KAAK,EAAC,CAAC,KAAS,EAAC,EAAE;gBACjB,IAAG,KAAK,YAAY,mEAAiB,EACrC;oBACE,IAAG,KAAK,CAAC,MAAM,IAAE,GAAG,EACpB;wBACE,OAAO,CAAC,GAAG,EAAE,CAAC;wBACd,KAAK,CAAC,kBAAkB,CAAC,CAAC;qBAC3B;iBACF;YACH,CAAC;SACF,CACF,CAAC,CAAC;IAEL,CAAC;;kHAzBU,iCAAiC;kIAAjC,iCAAiC,WAAjC,iCAAiC,mBAFhC,MAAM;;;;;;;;;;;;;;;ACLb,MAAM,cAAc;IAA3B;QACI,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;IACvB,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;ACH6F;AAEvF,MAAM,aAAa,GACtB,4DAAO,CAAC,iBAAiB,EAAE;IACvB,+DAAU,CAAC,SAAS,EAAE;QAClB,0DAAK,CAAC,gBAAgB,EACd,0DAAK,CAAC,EAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,EAC3C,EAAC,QAAQ,EAAC,IAAI,EAAC,CAClB;QACL,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAE;gBACZ,0DAAK,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC;gBAClB,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,OAAO,EAAC,GAAG,EAAC,CAAC,CAAC;aACvC,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAE;gBACZ,0DAAK,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC;gBAClB,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,OAAO,EAAC,GAAG,EAAC,CAAC,CAAC;aACvC,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL,CAAC;CACL,CAAC,CAAC;AAEA,MAAM,gBAAgB,GACzB,4DAAO,CAAC,iBAAiB,EAAC;IACtB,+DAAU,CAAC,SAAS,EAAC;QACjB,0DAAK,CAAC,gBAAgB,EACd,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CACtB;QACD,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,kBAAkB,EAAC,CAAC;gBACrC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC,CAAC;aACtD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC;gBACnC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,mBAAmB,EAAC,CAAC,CAAC;aACzD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL,CAAC;CAEL,CAAC,CAAC;AAEA,MAAM,eAAe,GACxB,4DAAO,CAAC,iBAAiB,EAAC;IACtB,+DAAU,CAAC,SAAS,EAAE;QAClB,0DAAK,CAAC,gBAAgB,EAClB,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAClB;QACD,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,2BAA2B,EAAC,CAAC;gBAC9C,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;aAC/D,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,yBAAyB,EAAC,CAAC;gBAC5C,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,4BAA4B,EAAC,CAAC,CAAC;aAClE,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL,CAAC;CACL,CAAC,CAAC;AAEI,MAAM,iBAAiB,GAC1B,4DAAO,CAAC,iBAAiB,EAAC;IACtB,+DAAU,CAAC,SAAS,EAAC;QACjB,0DAAK,CAAC,gBAAgB,EAClB,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAClB;QACD,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,2BAA2B,EAAC,CAAC;gBAC9C,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;aAC/D,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,yBAAyB,EAAC,CAAC;gBAC5C,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,4BAA4B,EAAC,CAAC,CAAC;aAClE,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL,CAAC;CACL,CAAC,CAAC;AAEP,SAAS,SAAS;IAEd,OAAO;QACH,0DAAK,CAAC,gBAAgB,EACd,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QACxB,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,kBAAkB,EAAC,CAAC;gBACrC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC,CAAC;aACtD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC;gBACnC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,mBAAmB,EAAC,CAAC,CAAC;aACzD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL;AACL,CAAC;AAED,SAAS,UAAU;IAEf,OAAO;QACH,0DAAK,CAAC,gBAAgB,EACd,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QACxB,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,mBAAmB,EAAC,CAAC;gBACtC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC,CAAC;aACtD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,gBAAgB,EAAC,CAAC;gBACnC,4DAAO,CAAC,MAAM,EAAC,0DAAK,CAAC,EAAC,SAAS,EAAC,kBAAkB,EAAC,CAAC,CAAC;aACxD,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL;AACL,CAAC;AAEM,MAAM,yBAAyB,GAClC,4DAAO,CAAC,iBAAiB,EAAC;IACtB,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,+DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;CACrC,CAAC,CAAC;AAGA,MAAM,iBAAiB,GAC1B,4DAAO,CAAC,iBAAiB,EAAC;IACtB,+DAAU,CAAC,SAAS,EAAC;QACjB,0DAAK,CAAC,gBAAgB,EAClB,0DAAK,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EACxC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAClB;QACD,0DAAK,CAAC;YACF,0DAAK,CAAC,QAAQ,EAAC;gBACX,4DAAO,CAAC,IAAI,EAAC,8DAAS,CAAC;oBACnB,0DAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,+BAA+B,EAAE,kBAAkB,EAAE,aAAa,EAAE,CAAC;oBACnG,0DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,4BAA4B,EAAE,CAAC;oBAC/D,0DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,6BAA6B,EAAE,CAAC;oBAChE,0DAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,yBAAyB,EAAE,CAAC;iBAC7D,CAAC,CAAC;aACN,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAElB,0DAAK,CAAC,QAAQ,EAAC;gBACX,0DAAK,CAAC,EAAC,SAAS,EAAC,yBAAyB,EAAC,CAAC;gBAC5C,4DAAO,CAAC,IAAI,EAAE,8DAAS,CAAC;oBACpB,0DAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,yBAAyB,EAAE,kBAAkB,EAAE,cAAc,EAAE,CAAC;oBAC9F,0DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,6BAA6B,EAAE,CAAC;oBAChE,0DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,4BAA4B,EAAE,CAAC;oBAC/D,0DAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,8BAA8B,EAAE,CAAC;iBAClE,CAAC,CAAC;aACN,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACrB,CAAC;KACL,CAAC;CACL,CAAC,CAAC;;;;;;;;;;;;;;;;;AC1MJ,MAAM,UAAU;IAErB,SAAS,CAAC,KAAU,EAAC,QAAe,EAAC,UAAiB;QACpD,IAAI,KAAK,IAAI,IAAI,EACjB;YACE,OAAO,KAAK,CAAC;SACd;QACD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,IAAI,IAAI,KAAK,EACtB;YACE,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAC/E;gBACE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB;SACF;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;;oEAjBU,UAAU;oHAAV,UAAU;;;;;;;;;;;;;;;;;ACDhB,MAAM,iBAAiB;IAH9B;QAiBU,YAAO,GAAG,CAAC,CAAM,EAAC,SAAgB,EAAQ,EAAE;YAElD,IAAI,CAAC,GAAG;gBACN,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;gBACjC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;gBACvC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU;gBACjD,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU;aAC1D,CAAC;YAEF,IAAI,CAAC,GAAG;gBACN,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;gBACnC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;aAChD,CAAC;YAEF,IAAI,CAAC,GAAG;gBACN,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa;gBAC/D,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW;aACpE,CAAC;YAEF,MAAM,GAAG,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,GAAG,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACvC,MAAM,GAAG,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,OAAO,GAAG,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;YAC7C,MAAM,IAAI,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,IAAI,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClD,MAAM,OAAO,GAAG,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YACnD,MAAM,IAAI,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,GAAG,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,KAAK,GAAG,CAAC,CAAM,EAAO,EAAE,CAAC,CAAC,EAAO,EAAO,EAAE,CAC9C,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAE7D,IAAI,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAM,EAAE,EAAE;gBAE1C,OAAO;oBACL,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW;oBAC5C,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE;oBAC1D,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;iBAC1B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACb,CAAC,CAAC;YAEF,IAAI,QAAQ,GAAG,CAAC,KAAU,EAAE,CAAM,EAAE,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEjF,IAAI,OAAO,CAAC,KAAK,QAAQ;gBACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,SAAS,CAAC,CAAC;iBACnC,IAAI,CAAC,KAAK,GAAG;gBAChB,OAAO,MAAM,CAAC;;gBAEd,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACnC,GAAG,CAAC,SAAS,CAAC;qBACd,GAAG,CAAC,QAAQ,CAAC;qBACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;qBAC1B,OAAO,EAAE;qBACT,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC;KAEF;IAnEC,SAAS,CAAC,KAAU,EAAC,YAAiB,IAAI;QACxC,IAAG,KAAK,IAAE,IAAI,EACd;YACE,OAAO,IAAI,CAAC;SACb;aAED;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;SACtC;IAEH,CAAC;;kFAZU,iBAAiB;kIAAjB,iBAAiB;;;;;;;;;;;;;;;;;ACCvB,MAAM,UAAU;IAEtB,SAAS,CAAC,KAAgB,EAAE,gBAAwB,EAAE,QAAgB;QAEnE,IAAI,KAAK,IAAI,IAAI,EACjB;YACE,OAAO,KAAK,CAAC;SACd;QAED,IAAI,KAAK,GAAQ,gBAAgB,GAAG,QAAQ,CAAC;QAC7C,IAAI,GAAG,GAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAEzD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAE,KAAK,EAAG,CAAC,GAAG,GAAG,EAAG,CAAC,EAAE,EACjC;YACE,IAAI,KAAK,CAAC,CAAC,CAAC,EACZ;gBACE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;;oEArBU,UAAU;oHAAV,UAAU;;;;;;;;;;;;;;;;;ACDhB,MAAM,QAAQ;IAEnB,SAAS,CAAC,KAAW,EAAC,MAAa,EAAC,SAAgB;QAElD,IAAG,KAAK,IAAI,IAAI,EAChB;YACE,OAAO,IAAI,CAAC;SACb;QAED,KAAK,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC,CAAC;YACrB,yCAAyC;YACzC,sCAAsC;YACtC,mDAAmD;YAEnD,IAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EACzB;gBACE,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBAErF,iBAAiB;gBACjB,iBAAiB;gBACjB,+DAA+D;aAChE;iBAED;gBACE,OAAO,CAAC,CAAC;aACV;QAEH,CAAC,CAAC,CAAC;QAGH,IAAG,SAAS,IAAI,MAAM,EACtB;YACE,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;QAED,OAAO,KAAK,CAAC;IACf,CAAC;;gEApCU,QAAQ;gHAAR,QAAQ;;;;;;;;;;;;;;;;;;;ACGd,MAAM,gBAAgB;IAE3B,YAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAE9C,YAAY;QAER,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,eAAe,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAClF,CAAC;IAED,qBAAqB,CAAC,SAAgB;QAEpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,kCAAkC,GAAC,SAAS,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAC3G,CAAC;IAED,aAAa,CAAC,UAAkB;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,eAAe,EAAC,UAAU,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACzF,CAAC;IAED,aAAa,CAAC,eAAuB;QAEnC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,eAAe,EAAC,eAAe,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAC7F,CAAC;IAED,aAAa,CAAC,SAAqB;QAEjC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,0BAA0B,GAAC,SAAS,CAAC,CAAC;IAC9E,CAAC;;gFA3BU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;ACJmB;;;AAMhC,MAAM,uBAAuB;IAGlC,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAG7C,CAAC;IAEM,mBAAmB,CAAC,MAAa;QAEtC,OAAO,CAAC,OAAuB,EAAyB,EAAE;YACtD,IAAG,CAAC,OAAO,CAAC,KAAK;gBACf,OAAO,IAAI,CAAC;YAEd,IAAI,KAAK,GAAC,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,WAAW,GAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAExC,IAAI,eAAe,GAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,GAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YACpE,IAAI,SAAS,GAAC,CAAC,eAAe,GAAC,CAAC,IAAI,GAAC,EAAE,GAAC,EAAE,GAAC,EAAE,CAAC,CAAC,GAAC,MAAM,CAAC;YAEvD,IAAG,SAAS,IAAE,MAAM;gBAClB,OAAO,IAAI,CAAC;;gBAEZ,OAAO,EAAC,MAAM,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,CAAC;QAEpC,CAAC,CAAC;IACJ,CAAC;IAEM,gBAAgB,CAAC,iBAAyB,EAAE,gBAAwB;QAEzE,OAAO,CAAC,SAA0B,EAA2B,EAAE;YAE7D,IAAI,CAAE,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAiB,CAAC,KAAK;gBAC1D,OAAO,IAAI,CAAC,CAAC,yCAAyC;YAExD,IAAK,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAiB,CAAC,KAAK,IAAK,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAS,CAAC,KAAK;gBAC3G,OAAO,IAAI,CAAC,CAAC,OAAO;iBAEtB;gBACG,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAiB,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;gBACpG,OAAO,EAAE,gBAAgB,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS;aACzD;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,uBAAuB;QAE5B,OAAO,CAAC,OAAuB,EAAoC,EAAE;YACnE,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC;iBACrC,IAAI,CAAC,yCAAG,CAAC,CAAC,YAAgB,EAAC,EAAE;gBAE1B,IAAG,YAAY,IAAE,IAAI,EACrB;oBACE,OAAO,EAAC,WAAW,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,CAAC;iBACpC;qBAED;oBACE,OAAO,IAAI,CAAC;iBACb;YAEL,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;;8FA9DU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;;ACN0C;AAInC;;;;;AAQpB,MAAM,YAAY;IAGvB,YAAoB,WAAuB,EAAS,gBAAiC,EAAS,MAAa;QAAvF,gBAAW,GAAX,WAAW,CAAY;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAO;QADnG,eAAU,GAAiB,IAAI,CAAC;QAKxC,oBAAe,GAAK,IAAI,CAAC;IAFzB,CAAC;IAIM,KAAK,CAAC,cAA6B;QAExC,IAAI,CAAC,UAAU,GAAC,IAAI,4DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,eAAe,EAAC,cAAc,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,OAAO,EAAC,UAAU,EAAC,CAAC;aACpG,IAAI,CAAC,yCAAG,CAAC,QAAQ,GAAE;YAClB,IAAG,QAAQ,EACX;gBACE,IAAI,CAAC,eAAe,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC5C,cAAc,CAAC,aAAa,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC5D,cAAc,CAAC,kBAAkB,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;aACjF;YACD,OAAO,QAAQ,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAEM,QAAQ,CAAC,eAA+B;QAE7C,IAAI,CAAC,UAAU,GAAC,IAAI,4DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,WAAW,EAAC,eAAe,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,OAAO,EAAC,UAAU,EAAC,CAAC;aAC/E,IAAI,CAAC,yCAAG,CAAC,QAAQ,GAAE;YAClB,IAAG,QAAQ,EACX;gBACI,IAAI,CAAC,eAAe,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC5C,cAAc,CAAC,aAAa,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC5D,cAAc,CAAC,kBAAkB,CAAC,GAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;aACjF;YAED,OAAO,QAAQ,CAAC,IAAI,CAAC;QAEvB,CAAC,CAAC,CAAC,CAAC;IAE5B,CAAC;IAED,cAAc,CAAC,KAAY;QAEzB,IAAI,CAAC,UAAU,GAAC,IAAI,4DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,OAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,sBAAsB,GAAC,KAAK,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACvF,CAAC;IAGM,MAAM;QAEX,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAEM,eAAe;QAEpB,IAAI,KAAK,GAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC;YACtC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAW,CAAC,CAAC,KAAK,EAAC,KAAI,CAAC;QAGjF,IAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,EACzC;YACE,OAAO,KAAK,CAAC,CAAC,+BAA+B;SAC9C;aACG;YACF,OAAO,IAAI,CAAC,CAAE,gBAAgB;SAC/B;IAEH,CAAC;;wEAvEU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;ACTwC;AACS;AAEpC;;;AAO1B,MAAM,eAAe;IAI1B,YAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;QAEvC,IAAI,CAAC,SAAS,GAAC,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;QAET,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAGD,cAAc;QAEZ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,eAAe,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;aACtE,IAAI,CAAC,mDAAG,CACL,CAAC,IAAc,EAAC,EAAE;YAChB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAC7B;gBACE,wCAAwC;aACzC;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CACF,CAAC,CAAC;IACb,CAAC;IAED,aAAa,CAAC,UAAkB;QAG9B,IAAI,cAAc,GAAG,IAAI,6DAAW,EAAE,CAAC;QACvC,cAAc,GAAG,cAAc,CAAC,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAExF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,eAAe,EAAC,UAAU,EAC7C,EAAC,OAAO,EAAC,cAAc,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,eAAuB;QAEnC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,eAAe,EAAC,eAAe,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAC7F,CAAC;IAED,aAAa,CAAC,SAAgB;QAE5B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,0BAA0B,GAAC,SAAS,CAAC,CAAC;IAC9E,CAAC;IAED,cAAc,CAAC,QAAe,EAAC,UAAiB;QAE9C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,sBAAsB,GAAC,QAAQ,GAAC,GAAG,GAAC,UAAU,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IAC9G,CAAC;IAED,qBAAqB,CAAC,SAAgB;QAEpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,iCAAiC,GAAC,SAAS,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACzG,CAAC;;8EA1DU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;ACTqE;;;AAQlF,MAAM,mBAAmB;IAK9B,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAHnC,eAAU,GAAiB,IAAI,CAAC;QACxC,oBAAe,GAAY,IAAI,CAAC;IAKhC,CAAC;IAEM,GAAG,CAAC,MAAa;QAEtB,MAAM,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,IAAI,GAAG;YACT,GAAG,EAAE,MAAM;SACZ;QAEC,IAAI,CAAC,UAAU,GAAG,IAAI,4DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,2BAA2B;QAC3B,2HAA2H;QAC3H,gEAAgE;QACjE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEhE,kEAAkE;IAGrE,CAAC;;sFA1BU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL2B;AACmE;AACX;AACd;AACvC;AACgB;AAChB;AACgB;AACV;AAC4B;AACtC;;AAsCvC,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GAvBd;YACP,yDAAY;YACZ,wDAAW;YACX,gEAAmB;YACnB,mEAAgB;SACjB,EAEC,yDAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,mEAAgB;mIAaP,YAAY,mBAhCrB,0HAAsC;QACtC,+GAAiC;QACjC,iGAA0B;QAC1B,0DAAU;QACV,0EAAiB;QACjB,0DAAU;QACV,4FAAwB;QACxB,sDAAQ,aAGR,yDAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,mEAAgB,aAGhB,yDAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,mEAAgB;QAEhB,0HAAsC;QACtC,+GAAiC;QACjC,iGAA0B;QAC1B,0DAAU;QACV,0EAAiB;QACjB,0DAAU;QACV,4FAAwB;QACxB,sDAAQ;;;;;;;;;;;;;;;AC7CZ,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/admin/Components/about/about.component.ts","./src/app/admin/Components/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/directives/alert.directive.ts","./src/app/directives/client-location-status-validator.directive.ts","./src/app/directives/component-loader.directive.ts","./src/app/directives/project-idunique-validator.directive.ts","./src/app/directives/repeater.directive.ts","./src/app/directives/team-size-validator.directive.ts","./src/app/employee/Components/tasks/tasks.component.ts","./src/app/employee/Components/tasks/tasks.component.html","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/guards/can-activate-guard.service.ts","./src/app/guards/can-deactive-guard.service.ts","./src/app/interceptors/jwt-intercepter.service.ts","./src/app/interceptors/jwt-un-authorized-intercepter.service.ts","./src/app/models/login-view-model.ts","./src/app/my-animations.ts","./src/app/pipes/filter.pipe.ts","./src/app/pipes/number-to-words.pipe.ts","./src/app/pipes/paging.pipe.ts","./src/app/pipes/sort.pipe.ts","./src/app/services/countries.service.ts","./src/app/services/custom-validators.service.ts","./src/app/services/login.service.ts","./src/app/services/projects.service.ts","./src/app/services/router-logger.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"fw-bold fs-2\">about works!<p>\n\nWhat is Lorem Ipsum?\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\nWhy do we use it?\n\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\n\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './admin/Components/about/about.component';\nimport { CanDeactiveGuardService } from './guards/can-deactive-guard.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\nconst routes: Routes = [\n        {path:\"\",redirectTo:\"login\",pathMatch:\"full\"},\n        {path:\"login\",component:LoginComponent,data:{linkIndex:2} },\n        {path:\"signup\",component:SignupComponent,canDeactivate:[CanDeactiveGuardService],data:{linkIndex:3}},\n        {path:\"about\",component:AboutComponent,data:{linkIndex:1}},\n        { path: \"admin\", loadChildren: () => import(\"./admin/admin.module\").then(m => m.AdminModule) }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true,enableTracing:true,preloadingStrategy:PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './services/login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RouterLoggerService } from './services/router-logger.service';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { AnonymousSubject } from 'rxjs/internal/Subject';\nimport { fadeAnimation,keyFrameAnimation,slideLeftOrRightAnimation,slideUpAnimation, zoomLeftAnimation, zoomUpAnimation } from './my-animations';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations:[keyFrameAnimation]\n\n  \n})\nexport class AppComponent implements OnInit\n{\n\n  constructor(public loginService:LoginService,private domSanitizer:DomSanitizer,\n                private routerLoggerService:RouterLoggerService,private router:Router)\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((event)=>{\n      if(event instanceof NavigationEnd)\n      {\n        let userName=(this.loginService.currentUserName)?this.loginService.currentUserName:\"anonymous\";\n\n        let logMsg=new Date().toLocaleString()+\":\"+userName+ \" Navigate to \"+event.url;\n\n        this.routerLoggerService.log(logMsg).subscribe();\n      }\n\n    });\n    \n    \n  }\n  \n  getState(outlet:RouterOutlet)\n  {\n    return outlet.isActivated ? \n      outlet.activatedRoute.snapshot.url[0].path && outlet.activatedRouteData[\"linkIndex\"]  : \"none\";\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-success\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\"> Angular Task Manager </a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mynav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null && loginService.currentUserName=='admin'\">\n            <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null && loginService.currentUserName=='employee'\">\n            <a class=\"nav-link\" [routerLink]=\"['/employee','tasks']\">Tasks</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null && loginService.currentUserName=='admin'\">\n            <a class=\"nav-link\" [routerLink]=\"['/admin','projects',0]\">Projects</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null && loginService.currentUserName=='admin'\">\n            <a class=\"nav-link\" [routerLink]=\"['/admin','masters']\">Masters</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!=null\">\n            <a class=\"nav-link\" (click)=\"loginService.Logout()\" >Logout</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n            <a class=\"nav-link\" [routerLink]=\"['/signup']\">Sign Up</a>\n          </li>\n          <li class=\"nav-item\"  *ngIf=\"loginService.currentUserName!=null\">\n            <span class=\"nav-link txt text-warning\" >{{loginService.currentUserName}}</span>\n          </li>\n        </ul>\n        <form class=\"d-flex\">\n            <span class=\"input-group-text\" id=\"search\" ><i class=\"fa fa-search\"></i></span>\n            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-warning\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  </nav>\n  <div class=\"container-fluid\" [@routeAnimations]=\"getState(outlet)\">\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n ","import { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { JwtIntercepterService } from './interceptors/jwt-intercepter.service';\r\nimport { JwtUnAuthorizedIntercepterService } from './interceptors/jwt-un-authorized-intercepter.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { AlertDirective } from './directives/alert.directive';\r\nimport { RepeaterDirective } from './directives/repeater.directive';\r\nimport { EmployeeModule } from './employee/employee.module';\r\nimport{BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    AlertDirective,\r\n    RepeaterDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    EmployeeModule,\r\n    SharedModule,\r\n    JwtModule.forRoot({\r\n      config:{\r\n        tokenGetter:()=>{\r\n          return (sessionStorage.getItem('currentUser')?JSON.parse(sessionStorage.getItem('currentUser') as string).token:null)\r\n        }\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    {\r\n      provide:HTTP_INTERCEPTORS,\r\n      useClass:JwtIntercepterService,\r\n      multi:true\r\n    },\r\n    {\r\n      provide:HTTP_INTERCEPTORS,\r\n      useClass:JwtUnAuthorizedIntercepterService,\r\n      multi:true\r\n    }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LoginViewModel } from '../../models/login-view-model';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginViewModel:LoginViewModel =new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService:LoginService,private router:Router,private jwtHelperService:JwtHelperService)\n  {\n\n  }\n\n  @ViewChild(\"userName\") userName:ElementRef|any=null;\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.userName.nativeElement.focus();\n    }, 500);\n  }\n\n  onLoginClick(event:any)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe({\n      next:(response)=>{\n\n        var token=sessionStorage.getItem('currentUser')? JSON.parse(sessionStorage.getItem('currentUser') as string):null;\n        if(token.role==\"Employee\")\n          this.router.navigateByUrl(\"/employee/tasks\");\n        else\n          //this.router.navigateByUrl(\"/admin/dashboard\");\n          this.router.navigate(['/admin','dashboard']);\n      },\n      error:(error)=>{\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      }\n    });\n  }\n\n}\n","<form>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\r\n            <div class=\"card text-center\">\r\n                <div class=\"card-header bg-secondary text-start\">\r\n                  <h3>Login </h3>\r\n                  <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\r\n                </div>\r\n                <div class=\"card-body \">\r\n                    <div class=\"mb-3 mt-3 text-start\">\r\n                     <label for=\"UserName\" class=\"form-label\">Username </label>\r\n                    <input type=\"text\" #userName class=\"form-control\" placeholder=\"username\" name=\"username\" \r\n                        autofocus=\"autofocus\" [(ngModel)]=\"loginViewModel.Username\">\r\n                 </div>\r\n                 <div class=\"mb-3 text-start\">\r\n                    <label for=\"password\" class=\"form-label\">Password </label>\r\n                    <input type=\"password\" class=\"form-control\" placeholder=\"password\" name=\"password\" \r\n                        autofocus=\"autofocus\" [(ngModel)]=\"loginViewModel.Password\">\r\n                </div>\r\n                </div>\r\n                <div class=\"card-footer text-muted text-end\">\r\n                    <!-- <span class=\"text-danger\">{{loginError}} &nbsp;</span> -->\r\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\" >Login</button>\r\n                    <div *appRepeater=\"4;let i\" class=\"text-start\" >\r\n                        <a class=\"btn btn-primary\" data-bs-toggle=\"collapse\" [href]=\"'#collapseExample'+i\" role=\"button\" \r\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                            View {{i}}\r\n                        </a>\r\n                        <div class=\"collapse\" [id]=\"'collapseExample'+i\">\r\n                        <div class=\"card card-body\">\r\n                            Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CountriesService } from '../../services/countries.service';\nimport { Country } from '../../models/country';\nimport { CustomValidatorsService } from '../../services/custom-validators.service';\nimport { LoginService } from '../../services/login.service';\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\nimport { Router } from '@angular/router';\nimport { CanComponentDeactivate } from '../../guards/can-deactive-guard.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit,CanComponentDeactivate\n{\n\n  signUpForm:FormGroup | any = null;\n  genders=[\"male\",\"female\"];\n  countries:Country[]=[];\n  registerError:string|null=null;\n\n  canLeave: boolean=true;\n\n  constructor(private countriesService:CountriesService,private formBuilder:FormBuilder,\n          private customValidatorsService:CustomValidatorsService,\n          private loginService:LoginService,private router:Router) \n  {\n\n  }\n\n  ngOnInit(): void {\n\n    this.countriesService.getCountries().subscribe((response)=>{\n      this.countries=response;\n    });\n\n    this.signUpForm=this.formBuilder.group({\n      personName:this.formBuilder.group({\n        firstName:[null,[Validators.required,Validators.minLength(2)]],\n        lastName:[null,[Validators.required,Validators.minLength(2)]]\n      }),\n      email: [null, [Validators.required, Validators.email], [this.customValidatorsService.DuplicateEmailValidator()], { updateOn: 'blur' }],\n      mobile:[null,[Validators.required,Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth:[\"2022-03-15\",[Validators.required,this.customValidatorsService.minimumAgeValidator(18)]],\n      password:[null,[Validators.required]],\n      confirmPassword:[null,[Validators.required]],\n      gender: [null,[Validators.required]],\n      countryID:[null,[Validators.required]],\n      receiveNewsLetters:null,\n      skills:this.formBuilder.array([])\n    },{\n      validators:[\n        this.customValidatorsService.compareValidator(\"confirmPassword\",\"password\")\n      ]\n    });\n\n\n\n    this.signUpForm.valueChanges.subscribe((value:any)=>{\n     \n      this.canLeave=false;\n    });\n    \n\n  }\n\n\n  onSubmitClick()\n  {\n      //Display current form value\n      (this.signUpForm as any)[\"submitted\"]=true;\n      console.log(this.signUpForm.value);\n\n      if(this.signUpForm.valid)\n      {\n        var signUpViewModel =this.signUpForm.value as SignUpViewModel;\n        this.loginService.Register(signUpViewModel).subscribe({\n          next:(response)=>{\n            this.router.navigate([\"tasks\"]);\n          },\n          error:(error)=>{\n            console.log(error);\n            this.registerError=\"Unable to submit\";\n          }\n        });\n\n      }\n  }\n\n  onAddSkill()\n  {\n    var formGroup=this.formBuilder.group({\n      skillName:[null,[Validators.required]],\n      sKillLevel:[null,[Validators.required]]\n    });\n    \n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n\n  }\n\n  onRemoveClick(index:number)\n  {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n\n}\n","<div class=\"row mt-5\">\r\n    <div class=\"col-md-8 col-xl-6 mx-auto\">\r\n        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\r\n            <div class=\"card mt-1\">\r\n                <div class=\"card-header\">\r\n                    <h4>Sign Up</h4>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row mb-2\" formGroupName=\"personName\">\r\n                        <label for=\"firstName\" class=\"col-md-4 col-form-label-sm\">First Name:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"text\" id=\"firstName\" name=\"firstName\" class=\"form-control form-control-sm\" \r\n                                placeholder=\"First Name\" formControlName=\"firstName\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.firstName').invalid && \r\n                                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\r\n                                        'is-valid': signUpForm.get('personName.firstName').valid && \r\n                                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted)\r\n                                    }\" >\r\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && \r\n                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched ||signUpForm.submitted ) \r\n                                && signUpForm.get('personName.firstName').errors?.required \">First name can't be blank</span>\r\n\r\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && \r\n                            (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched ||signUpForm.submitted ) \r\n                                && signUpForm.get('personName.firstName').errors?.minlength \">First name should contain at least 2 characters</span>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\" formGroupName=\"personName\">\r\n                        <label for=\"lastName\" class=\"col-md-4 col-form-label-sm\">Last Name:</label>\r\n                        <div class=\"col-md-8\" >\r\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" class=\"form-control form-control-sm\" \r\n                                placeholder=\"Last Name\" formControlName=\"lastName\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.lastName').invalid && \r\n                                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\r\n                                        'is-valid': signUpForm.get('personName.lastName').valid && \r\n                                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted)\r\n                                    }\" > \r\n                                \r\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && \r\n                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched ||signUpForm.submitted ) \r\n                                && signUpForm.get('personName.lastName').errors?.required \">Last name can't be blank</span>\r\n\r\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && \r\n                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched ||signUpForm.submitted ) \r\n                                && signUpForm.get('personName.lastName').errors?.minlength \">Last name should contain at least 2 characters</span>\r\n                                \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label for=\"email\" class=\"col-md-4 col-form-label-sm\" >EMail:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"text\" id=\"email\" name=\"email\" class=\"form-control form-control-sm\"  placeholder=\"Email\" formControlName=\"email\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('email').invalid && \r\n                                                (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\r\n                                            'is-valid': signUpForm.get('email').valid && \r\n                                                (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted)\r\n                                        }\" > \r\n                                    \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \r\n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('email').errors?.required \">Email can't be blank</span>\r\n\r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \r\n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('email').errors?.email \">Email is invalid</span>\r\n                            \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && \r\n                                (signUpForm.get('email').dirty || signUpForm.get('email').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('email').errors?.uniqueEmail \">Email is already exists</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label for=\"mobile\" class=\"col-md-4 col-form-label-sm\" >Mobile:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"text\" id=\"mobile\" name=\"mobile\" class=\"form-control form-control-sm\" placeholder=\"Mobile\" formControlName=\"mobile\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('mobile').invalid && \r\n                                                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\r\n                                                'is-valid': signUpForm.get('mobile').valid && \r\n                                                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted)\r\n                                            }\" > \r\n                                    \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && \r\n                                (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('mobile').errors?.required \">Mobile can't be blank</span>\r\n\r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && \r\n                                (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('mobile').errors?.pattern \">Mobile is invalid</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\" >\r\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label-sm\" >Date Of Birth</label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" class=\"form-control form-control-sm\" placeholder=\"Date Of Birth\" formControlName=\"dateOfBirth\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('dateOfBirth').invalid && \r\n                                                    (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\r\n                                            'is-valid': signUpForm.get('dateOfBirth').valid && \r\n                                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted)\r\n                                        }\" > \r\n                                    \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && \r\n                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('dateOfBirth').errors?.required \">Date of Birth can't be blank</span>\r\n                            \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && \r\n                                (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('dateOfBirth').errors?.minAge \">Minimum age must be 18 year</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label for=\"password\" class=\"col-md-4 col-form-label-sm\">Password:</label>\r\n                        <div class=\"col-md-8\" >\r\n                            <input type=\"text\" id=\"password\" name=\"password\" class=\"form-control form-control-sm\" \r\n                                placeholder=\"Password\" formControlName=\"password\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('password').invalid && \r\n                                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\r\n                                        'is-valid': signUpForm.get('password').valid && \r\n                                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted)\r\n                                    }\" > \r\n                                \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && \r\n                                (signUpForm.get('password').dirty || signUpForm.get('password').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('password').errors?.required \">Password can't be blank</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label for=\"confirmPassword\" class=\"col-md-4 col-form-label-sm\">Confirm Password:</label>\r\n                        <div class=\"col-md-8\" >\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" class=\"form-control form-control-sm\" \r\n                                placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" \r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('confirmPassword').invalid && \r\n                                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\r\n                                        'is-valid': signUpForm.get('confirmPassword').valid && \r\n                                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted)\r\n                                    }\" > \r\n                                \r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && \r\n                                (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('confirmPassword').errors?.required \">Confirm Password can't be blank</span>\r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && \r\n                                (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('confirmPassword').errors?.compareValidator \">Password and Confirm Password do not match</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label class=\"col-md-4 col-form-label-sm\">Gender:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\" >\r\n                                <input type=\"radio\" [id]=\"gender\" name=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\r\n                                <label [for]=\"gender\" class=\"form-check-lable\">{{gender}}</label>\r\n                            </div>\r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && \r\n                                (signUpForm.get('gender').dirty || signUpForm.get('gender').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('gender').errors?.required \">Please select gender</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label class=\"col-md-4 col-form-label-sm\">Country:</label>\r\n                        <div class=\"col-md-8\">\r\n                            <select id=\"countryID\" name=\"countryID\" class=\"form-select form-select-sm \" formControlName=\"countryID\"\r\n                                [ngClass]=\"{'is-invalid': signUpForm.get('countryID').invalid && \r\n                                                (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\r\n                                            'is-valid': signUpForm.get('countryID').valid && \r\n                                            (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted)\r\n                                        }\" > \r\n                                <option value=\"null\">Please Select</option>\r\n                                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">{{country.countryName}}</option>\r\n                            </select>\r\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && \r\n                                (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched ||signUpForm.submitted ) \r\n                                    && signUpForm.get('countryID').errors?.required \">Please select country</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label class=\"col-md-4 col-form-label-sm\"></label>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"checkbox\" id=\"receiveNewsLetters\" name=\"receiveNewsLetters\" value=\"true\" \r\n                                class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\r\n                            <label for=\"receiveNewsLetters\" class=\"form-check-label\" >Receive News Letters</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-2\">\r\n                        <label class=\"col-md-4 col-form-label-sm\">Skills:</label>\r\n                        <div class=\"col-md-8\" formArrayName=\"skills\" >\r\n                            <div class=\"row mb-2\" *ngFor=\"let skill of signUpForm.get('skills').controls;let i=index\" \r\n                                    [formGroupName]=\"i\" >\r\n                                <div class=\"col-sm-5\">\r\n                                    <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control form-control-sm\" [ngClass]=\"{\r\n                                        'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\r\n                        \r\n                                        'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\r\n                                    \r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <select name=\"sKillLevel\" id=\"sKillLevel\" formControlName=\"sKillLevel\" class=\"form-select form-select-sm\" [ngClass]=\"{\r\n                                        'is-invalid': skill.get('sKillLevel').invalid && (skill.get('sKillLevel').dirty || skill.get('sKillLevel').touched || signUpForm.submitted),\r\n                        \r\n                                        'is-valid': skill.get('sKillLevel').valid && (skill.get('sKillLevel').dirty || skill.get('sKillLevel').touched || signUpForm.submitted) }\">\r\n                                        <option value=\"null\">Please Select</option>\r\n                                        <option value=\"Beginner\">Beginner</option>\r\n                                        <option value=\"Intermediate\">Intermediate</option>\r\n                                        <option value=\"Professional\">Professional</option>\r\n                                        <option value=\"Expert\">Expert</option>\r\n                                      </select>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"onRemoveClick(i)\" >Remove</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btb btn-primary\"  (click)=\"onAddSkill()\"> Add Skill</button>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button class=\"btn btn-success float-end\"  >Create Account</button>\r\n                    <div class=\"text-danger\" >{{registerError}}</div>\r\n                </div>\r\n                {{signUpForm.value | json}}\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Directive, ElementRef, HostBinding, HostListener, Input,Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective\n{\n  @Input(\"error\") error: string | any = null;\n  @HostBinding(\"title\") title:string=\"\";\n\n  constructor(private elementRef: ElementRef,private renderer2:Renderer2)\n  {\n  }\n\n  divElement:any;\n  spanElement:any;\n  spanText:any;\n\n  ngOnInit()\n  {\n    this.divElement=this.renderer2.createElement(\"div\");\n    this.renderer2.setAttribute(this.divElement,\"role\",\"alert\");\n    this.renderer2.setAttribute(this.divElement,\"class\",\"alert alert-danger fade show\");\n    this.renderer2.setStyle(this.divElement,\"transition\",\"transform 0.5s\");\n\n    this.spanElement=this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement,\"class\",\"message\");\n\n    this.spanText=this.renderer2.createText(this.error);\n\n    this.renderer2.appendChild(this.spanElement,this.spanText);\n    this.renderer2.appendChild(this.divElement,this.spanElement);\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title=\"Please try again.\";\n  }\n\n  @HostListener(\"mouseenter\",[\"$event\"])\n  onMouseEnter(event:any)\n  {\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1.1)\")\n    // this.elementRef.nativeElement.querySelector(\".alert\").style.transform=\"scale(1.1)\";\n  }\n\n  @HostListener(\"mouseleave\",[\"$event\"])\n  onMouseLeave(event:any)\n  {\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1)\");\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform=\"scale(1)\";\n  }\n\n\n}","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { Variation } from '@popperjs/core';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers:[{provide:NG_VALIDATORS,useExisting:ClientLocationStatusValidatorDirective,multi:true}]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator\n{\n\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid=true;\n\n    if(control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid=false;\n    }\n    \n    if(isValid)\n    {\n      return null;\n    }\n    else{\n      return {clientLocationStatus:{valid:false}};\n    }\n\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponentLoader]'\n})\nexport class ComponentLoaderDirective {\n\n  constructor(public viewContainerRef:ViewContainerRef) \n  { \n    \n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProjectsService } from './../services/projects.service';\nimport { Project } from './../models/project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers:[{provide:NG_ASYNC_VALIDATORS,useExisting:ProjectIDUniqueValidatorDirective,multi:true}]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n\n  constructor(private projectsService:ProjectsService) { \n\n  }\n\n  validate(control: AbstractControl):  Observable<ValidationErrors | null> {\n    return this.projectsService.getProjectByProjectID(control.value)\n                                .pipe(map((existingProject:Project)=>{\n                                    if(existingProject!=null)\n                                    {\n                                      return{uniqueProjectID:{valid:false}};\n                                    }\n                                    else\n                                    {\n                                      return null;\n                                    }\n                                }));\n\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective implements OnInit\n{\n\n  @Input(\"appRepeater\") n:number=0;\n\n  constructor(private viewContainerRef:ViewContainerRef,private templateRef:TemplateRef<any>)\n  {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit(): void {\n    \n    for(let i=0;i<this.n;i++)\n    {\n      this.viewContainerRef.createEmbeddedView(this.templateRef,{$implicit:i});\n    }\n\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers:[{provide:NG_VALIDATORS,useExisting:TeamSizeValidatorDirective,multi:true}]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n:number|any=0;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let currentValue=control.value;\n\n    let isValid=currentValue % this.n == 0;\n    if(isValid)\n    {\n      return null;\n    }\n    else\n    {\n      return {divisible:{valid:false}};\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from 'src/app/guards/can-activate-guard.service';\nimport { TasksComponent } from '../Components/tasks/tasks.component';\n\n\nconst routes:Routes=[\n  {path:\"employee\",canActivate:[CanActivateGuardService],data:{expectedRole:\"Employee\"},children:[\n    {path:\"tasks\",component:TasksComponent}\n  ]}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[RouterModule]\n\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { TasksComponent } from './Components/tasks/tasks.component';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    TasksComponent\n  ],\n  imports: [\n    EmployeeRoutingModule,\n    SharedModule\n  ],\n  exports:[TasksComponent]\n\n})\nexport class EmployeeModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './../services/login.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n {\n\n  constructor(private loginService:LoginService,private router:Router,private jwtHelperService:JwtHelperService) { \n\n  }\ncanActivate(route:ActivatedRouteSnapshot ): boolean\n{\n  console.log(this.router.url);\n  var token=sessionStorage.getItem('currentUser')?\n        JSON.parse(sessionStorage.getItem('currentUser') as string).token:null;\n\n  \n  if(this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == \n            route.data['expectedRole'] )    \n  {\n    return true;\n  }\n  else\n  {\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate\n{\n  canLeave:boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactiveGuardService implements CanDeactivate<CanComponentDeactivate> \n{\n \n  canDeactivate(component: CanComponentDeactivate) {\n\n    if(component.canLeave == true)\n    {\n      return true;\n    }\n    else\n    {\n      return confirm(\"Do you want to discard changes?\");\n    }\n  }\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtIntercepterService implements HttpInterceptor\n{\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      var currentUser={token:\"\"};\n      if(sessionStorage['currentUser']!=null)\n      {\n        currentUser=JSON.parse(sessionStorage['currentUser']);\n      }\n\n      request=request.clone({\n        setHeaders:{\n          Authorization:\"Bearer \"+currentUser.token\n        }\n      });\n\n      return next.handle(request);\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedIntercepterService implements HttpInterceptor\n{\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(tap({\n        next: (event:HttpEvent<any>)=>{\n          if(event instanceof HttpResponse)\n          {\n            //do something with response\n          }\n        },\n        error:(error:any)=>{\n          if(error instanceof HttpErrorResponse)\n          {\n            if(error.status==401)\n            {\n              console.log();\n              alert('401 UnAuthorized');\n            }\n          }\n        }\n      }\n    ));  \n\n  }\n\n}\n","export class LoginViewModel {\n    Username:string=\"\";\n    Password:string=\"\";\n}\n","import { trigger,transition,query,style,animate,group, keyframes } from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                    style({position: 'absolute', width: '98%'}),\r\n                    {optional:true}\r\n                ),\r\n            group([\r\n                query(\":enter\", [\r\n                    style({opacity:0}),\r\n                    animate(\"0.6s\",style({opacity:'1'}))\r\n                ],{optional:true}),\r\n                \r\n                query(\":leave\", [\r\n                    style({opacity:1}),\r\n                    animate(\"0.6s\",style({opacity:'0'}))\r\n                ],{optional:true})\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const slideUpAnimation = \r\n    trigger(\"routeAnimations\",[\r\n        transition(\"* <=> *\",[\r\n            query(\":enter, :leave\",\r\n                    style({position:'absolute',width:'98%'}),\r\n                    {optional:true}\r\n            ),\r\n            group([\r\n                query(\":enter\",[\r\n                    style({transform:\"translateY(100%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateY(0%)\"}))\r\n                ],{optional:true}),\r\n\r\n                query(\":leave\",[\r\n                    style({transform:\"translateY(0%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateY(-100%)\"}))\r\n                ],{optional:true})\r\n            ])\r\n        ])\r\n\r\n    ]);\r\n\r\nexport const zoomUpAnimation=\r\n    trigger(\"routeAnimations\",[\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({position:'absolute',width:'98%'}),\r\n                {optional:true}\r\n            ),\r\n            group([\r\n                query(\":enter\",[\r\n                    style({transform:\"scale(0) translateY(100%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"scale(1) translateY(0%)\"}))\r\n                ],{optional:true}),\r\n                \r\n                query(\":leave\",[\r\n                    style({transform:\"scale(1) translateY(0%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"scale(0) translateY(-100%)\"}))\r\n                ],{optional:true})\r\n            ])\r\n        ])  \r\n    ]);\r\n\r\n    export const zoomLeftAnimation=\r\n        trigger(\"routeAnimations\",[\r\n            transition(\"* <=> *\",[\r\n                query(\":enter, :leave\",\r\n                    style({position:'absolute',width:'98%'}),\r\n                    {optional:true}\r\n                ),\r\n                group([\r\n                    query(\":enter\",[\r\n                        style({transform:\"scale(0) translateX(100%)\"}),\r\n                        animate(\"0.6s\",style({transform:\"scale(1) translateX(0%)\"}))\r\n                    ],{optional:true}),\r\n\r\n                    query(\":leave\",[\r\n                        style({transform:\"scale(1) translateX(0%)\"}),\r\n                        animate(\"0.6s\",style({transform:\"scale(0) translateX(-100%)\"}))\r\n                    ],{optional:true})\r\n                ])\r\n            ])\r\n        ]);\r\n    \r\n    function slideLeft()\r\n    {\r\n        return [\r\n            query(\":enter, :leave\",\r\n                    style({position:'absolute',width:'98%'}),\r\n                    {optional:true}),\r\n            group([\r\n                query(\":enter\",[\r\n                    style({transform:\"translateX(100%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateX(0%)\"}))\r\n                ],{optional:true}),\r\n                \r\n                query(\":leave\",[\r\n                    style({transform:\"translateX(0%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateX(-100%)\"}))\r\n                ],{optional:true})\r\n            ])\r\n        ]\r\n    }\r\n\r\n    function slideRight()\r\n    {\r\n        return [\r\n            query(\":enter, :leave\",\r\n                    style({position:'absolute',width:'98%'}),\r\n                    {optional:true}),\r\n            group([\r\n                query(\":enter\",[\r\n                    style({transform:\"translateX(-100%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateX(0%)\"}))\r\n                ],{optional:true}),\r\n                \r\n                query(\":leave\",[\r\n                    style({transform:\"translateX(0%)\"}),\r\n                    animate(\"0.6s\",style({transform:\"translateX(100%)\"}))\r\n                ],{optional:true})\r\n            ])\r\n        ]\r\n    }\r\n\r\n    export const slideLeftOrRightAnimation=\r\n        trigger(\"routeAnimations\",[\r\n            transition(\"0 => 1\", slideLeft()),\r\n            transition(\"0 => 2\", slideLeft()),\r\n            transition(\"0 => 3\", slideLeft()),\r\n            transition(\"0 => 4\", slideLeft()),\r\n            transition(\"0 => 5\", slideLeft()),\r\n            transition(\"0 => 6\", slideLeft()),\r\n\r\n            transition(\"1 => 0\", slideRight()),\r\n            transition(\"1 => 2\", slideLeft()),\r\n            transition(\"1 => 3\", slideLeft()),\r\n            transition(\"1 => 4\", slideLeft()),\r\n            transition(\"1 => 5\", slideLeft()),\r\n            transition(\"1 => 6\", slideLeft()),\r\n\r\n            transition(\"2 => 0\", slideRight()),\r\n            transition(\"2 => 1\", slideRight()),\r\n            transition(\"2 => 3\", slideLeft()),\r\n            transition(\"2 => 4\", slideLeft()),\r\n            transition(\"2 => 5\", slideLeft()),\r\n            transition(\"2 => 6\", slideLeft()),\r\n\r\n            transition(\"3 => 0\", slideRight()),\r\n            transition(\"3 => 1\", slideRight()),\r\n            transition(\"3 => 2\", slideRight()),\r\n            transition(\"3 => 4\", slideLeft()),\r\n            transition(\"3 => 5\", slideLeft()),\r\n            transition(\"3 => 6\", slideLeft()),\r\n\r\n            transition(\"4 => 0\", slideRight()),\r\n            transition(\"4 => 1\", slideRight()),\r\n            transition(\"4 => 2\", slideRight()),\r\n            transition(\"4 => 3\", slideRight()),\r\n            transition(\"4 => 5\", slideLeft()),\r\n            transition(\"4 => 6\", slideLeft()),\r\n\r\n            transition(\"5 => 0\", slideRight()),\r\n            transition(\"5 => 1\", slideRight()),\r\n            transition(\"5 => 2\", slideRight()),\r\n            transition(\"5 => 3\", slideRight()),\r\n            transition(\"5 => 4\", slideRight()),\r\n            transition(\"5 => 6\", slideLeft()),\r\n\r\n            transition(\"6 => 0\", slideRight()),\r\n            transition(\"6 => 1\", slideRight()),\r\n            transition(\"6 => 2\", slideRight()),\r\n            transition(\"6 => 3\", slideRight()),\r\n            transition(\"6 => 4\", slideRight()),\r\n            transition(\"6 => 5\", slideRight()),\r\n        ]);\r\n\r\n    \r\n    export const keyFrameAnimation=\r\n        trigger(\"routeAnimations\",[\r\n            transition(\"* <=> *\",[\r\n                query(\":enter, :leave\",\r\n                    style({position:'absolute',width:'98%'}),\r\n                    {optional:true}\r\n                ),\r\n                group([\r\n                    query(\":enter\",[\r\n                        animate(\"1s\",keyframes([\r\n                            style({ offset: 0, transform: \"scale(0.25) translateX(-100%)\", \"transform-origin\": \"center left\" }),\r\n                            style({ offset: 0.3, transform: \"scale(0.5) translateX(60%)\" }),\r\n                            style({ offset: 0.7, transform: \"scale(0.75) translateX(30%)\" }),\r\n                            style({ offset: 1, transform: \"scale(1) translateX(0%)\" })\r\n                        ]))\r\n                    ],{optional:true}),\r\n\r\n                    query(\":leave\",[\r\n                        style({transform:\"scale(1) translateX(0%)\"}),\r\n                        animate(\"1s\", keyframes([\r\n                            style({ offset: 0, transform: \"scale(1) translateX(0%)\", \"transform-origin\": \"center right\" }),\r\n                            style({ offset: 0.3, transform: \"scale(0.75) translateX(30%)\" }),\r\n                            style({ offset: 0.7, transform: \"scale(0.5) translateX(60%)\" }),\r\n                            style({ offset: 1, transform: \"scale(0.25) translateX(100%)\" })\r\n                        ]))\r\n                    ],{optional:true})\r\n                ])\r\n            ])\r\n        ]);\r\n    \r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any,searchBy:string,searchText:string): any {\n    if (value == null)\n    {\n      return value;\n    }\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n\n  transform(value: any,separator:string=\", \"): any {\n    if(value==null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value,separator);\n    }\n    \n  }\n\n  private inWords = (n: any,separator:string) : any =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = (x: any) => Array.from(x);\n    const num = (x: any) => Number(x) || 0;\n    const str = (x: any) => String(x);\n    const isEmpty = (xs: any) => xs.length === 0;\n    const take = (n: any) => (xs: any) => xs.slice(0, n);\n    const drop = (n: any) => (xs: any) => xs.slice(n);\n    const reverse = (xs: any) => xs.slice(0).reverse();\n    const comp = (f: any) => (g: any) => (x: any) => f(g(x));\n    const not = (x: any) => !x;\n    const chunk = (n: any): any => (xs: any): any =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]: any) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group: any, i: any) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n),separator);\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './../models/project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n\n transform(value: Project[], currentPageIndex: number, pageSize: number): any\n    {\n    if (value == null)\n    {\n      return value;\n    }\n    \n    var start:number=currentPageIndex * pageSize;\n    var end:number=(Number(currentPageIndex) + 1) * pageSize;\n\n    let resultArray = [];\n    for (let i =start ; i < end ; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value:any[],sortBy:string,sortOrder:string): any\n  {\n    if(value == null)\n    {\n      return null;\n    }\n\n    value.sort(function(a,b){\n      //less than 0        :   a comes before b\n      //greater than 0  :   b comes before a\n      //equal to 0         :   a and b are left unchanged\n\n      if(a[sortBy] && b[sortBy])\n      {\n        return a[sortBy].toString().toLowerCase()[0] - b[sortBy].toString().toLowerCase()[0];\n        \n        //a = cat  --> 99\n        //b = dog --> 100\n        //99 - 100 = -1     --> less than 0        :   a comes before b\n      }\n      else\n      {\n        return 0;\n      }\n\n    });\n\n\n    if(sortOrder == \"DESC\")\n    {\n      value.reverse();\n    }\n    \n    return value;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs';\nimport { Country } from './../models/country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getCountries():Observable<Country[]>\n  {\n      return this.httpClient.get<Country[]>(\"api/countries\", {responseType:\"json\"});\n  }\n\n  getCountryByCountryID(CountryID:number):Observable<Country>\n  {\n    return this.httpClient.get<Country>(\"api/countries/searchbycountryid/\"+CountryID, {responseType:\"json\"});\n  }\n\n  insertCountry(newCountry:Country):Observable<Country>\n  {\n    return this.httpClient.post<Country>(\"api/countries\",newCountry,{responseType:\"json\"});\n  }\n\n  updateCountry(existingCountry:Country):Observable<Country>\n  {\n    return this.httpClient.put<Country>(\"api/countries\",existingCountry,{responseType:\"json\"});\n  }\n\n  deleteCountry(CountryID:number|null):Observable<string>\n  {\n    return this.httpClient.delete<string>(\"api/countries?countryID=\"+CountryID);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService \n{\n\n  constructor(private loginService:LoginService) \n  { \n\n  }\n\n  public minimumAgeValidator(minAge:number):ValidatorFn\n  {\n    return (control:AbstractControl):ValidationErrors|null  =>{\n        if(!control.value)\n          return null;\n\n        var today=new Date();\n        var dateOfBirth=new Date(control.value);\n\n        var diffMilliSecond=Math.abs(today.getTime()-dateOfBirth.getTime());\n        var diffYears=(diffMilliSecond/(1000*60*60*24))/365.25;\n\n        if(diffYears>=minAge)\n          return null;\n        else\n          return {minAge:{valie:false}};\n        \n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: AbstractControl): ValidationErrors | null =>\n    {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else\n      {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator():AsyncValidatorFn\n  {\n    return (control:AbstractControl):Observable<ValidationErrors|null> =>{\n      return this.loginService.getUserByEmail(control.value)\n                      .pipe(map((existingUser:any)=>\n                      {\n                          if(existingUser!=null)\n                          {\n                            return {uniqueEmail:{valid:false}};\n                          }\n                          else\n                          {\n                            return null;\n                          }\n\n                      }));\n    };\n  }\n\n}\n\n","import { HttpClient,HttpBackend } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel} from './../models/login-view-model';\nimport { map } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\nimport { SignUpViewModel } from './../models/sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  \n  private httpClient:HttpClient|null=null;\n  constructor(private httpBackend:HttpBackend,private jwtHelperService:JwtHelperService,private router:Router) \n  {\n  }\n\n  currentUserName:any=null;\n\n  public Login(loginViewModel:LoginViewModel):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\",loginViewModel,{responseType:\"json\",observe:\"response\"})\n        .pipe(map(response=>{\n          if(response)\n          {\n            this.currentUserName=response.body.userName; \n            sessionStorage['currentUser']=JSON.stringify(response.body);\n            sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n          }\n          return response.body;\n        }));\n  }\n\n  public Register(signUpViewModel:SignUpViewModel):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n\n    return this.httpClient.post<any>(\"/register\",signUpViewModel,{responseType:\"json\",observe:\"response\"})\n                          .pipe(map(response=>{\n                            if(response)\n                            {\n                                this.currentUserName=response.body.userName;\n                                sessionStorage['currentUser']=JSON.stringify(response.body);\n                                sessionStorage['XSRFRequestToken']=response.headers.get(\"XSRF-REQUEST-TOKEN\");\n                            }\n\n                            return response.body;\n\n                          }));\n\n  }\n\n  getUserByEmail(Email:string):Observable<any>\n  {\n    this.httpClient=new HttpClient(this.httpBackend);\n    return  this.httpClient.get<any>(\"/api/getUserByEmail/\"+Email,{responseType:\"json\"});\n  }\n  \n\n  public Logout()\n  {\n    sessionStorage.removeItem('currentUser');\n    this.currentUserName=null;\n    this.router.navigate(['login']);\n  }\n\n  public isAuthenticated():boolean\n  {\n    var token=sessionStorage.getItem('currentUser')?\n              JSON.parse(sessionStorage.getItem('currentUser') as string).token:null;\n\n    \n    if(this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid is expired\n    }\n    else{\n      return true;  //token is valid\n    }\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { BehaviorSubject, Observable, Observer, Subject} from 'rxjs';\nimport { Project } from './../models/project';\nimport{map} from 'rxjs/operators'\nimport { ReturnStatement } from '@angular/compiler';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  public MySubject:BehaviorSubject<boolean>;\n\n  constructor(private httpClient:HttpClient) \n  { \n    this.MySubject=new BehaviorSubject<boolean>(false);\n  }\n  \n  toggleDetails()\n  {\n      this.MySubject.next(!this.MySubject.value);\n  }\n\n\n  getAllProjects():Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"/api/projects\",{responseType: \"json\"})\n          .pipe(map(\n              (data:Project[])=>{\n                for(let i=0;i<data.length;i++)\n                {\n                  //data[i].teamSize=data[i].teamSize*100;\n                }\n\n                return data;\n              }\n            ));\n  }\n\n  insertProject(newProject:Project):Observable<Project>\n  {\n\n    var requestHeaders = new HttpHeaders();\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n\n    return this.httpClient.post<Project>(\"/api/projects\",newProject,\n                      {headers:requestHeaders,responseType:\"json\"});\n  }\n\n  updateProject(existingProject:Project):Observable<Project>\n  {\n    return this.httpClient.put<Project>(\"/api/projects\",existingProject,{responseType:\"json\"});\n  }\n\n  deleteProject(projectID:number):Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectId=\"+projectID);\n  }\n\n  searchProjects(searchBy:string,searchText:string):Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"api/projects/search/\"+searchBy+\"/\"+searchText,{responseType:\"json\"});\n  }\n\n  getProjectByProjectID(ProjectID:number):Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"api/projects/searchbyprojectid/\"+ProjectID,{responseType:\"json\"});\n  }\n\n}\n","import { HttpBackend, HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n\n  private httpClient:HttpClient|null=null;\n  currentUserName:string|any=null;\n\n  constructor(private httpBackend:HttpBackend) \n  { \n\n  }\n\n  public log(logMsg:string):Observable<any>\n  {\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    var body = {\n      log: logMsg\n    }\n    \n      this.httpClient = new HttpClient(this.httpBackend);\n      //alert(\"Log333: \"+logMsg);\n      //return this.httpClient.post(\"/api/routerlogger\",[\"logMsg\"],{headers:new HttpHeaders().set(\"content-type\",\"text/plain\")});\n      //return this.httpClient.post(\"/api/routerlogger\",[\"dfgfdgdf\"]);\n     return this.httpClient.post(\"/api/routerlogger\",body,{headers});\n\n     //return this.httpClient.post(\"/api/routerlogger\",body,{headers});\n\n     \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientLocationStatusValidatorDirective } from '../directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../directives/project-idunique-validator.directive';\nimport { TeamSizeValidatorDirective } from '../directives/team-size-validator.directive';\nimport { FilterPipe } from '../pipes/filter.pipe';\nimport { NumberToWordsPipe } from '../pipes/number-to-words.pipe';\nimport { PagingPipe } from '../pipes/paging.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentLoaderDirective } from '../directives/component-loader.directive';\nimport { SortPipe } from '../pipes/sort.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    TeamSizeValidatorDirective,\n    FilterPipe,\n    NumberToWordsPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  exports:[\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    TeamSizeValidatorDirective,\n    FilterPipe,\n    NumberToWordsPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe\n  ]\n\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}